<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_test_suite_8h" kind="file">
    <compoundname>TestSuite.h</compoundname>
    <includes refid="_flags_8h" local="no">cxxtest/Flags.h</includes>
    <includes refid="_test_tracker_8h" local="no">cxxtest/TestTracker.h</includes>
    <includes refid="_descriptions_8h" local="no">cxxtest/Descriptions.h</includes>
    <includes refid="_value_traits_8h" local="no">cxxtest/ValueTraits.h</includes>
    <includedby refid="galaxy__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/base/tests/galaxy_suite.t.hh</includedby>
    <includedby refid="_real_descriptions_8h" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/RealDescriptions.h</includedby>
    <includedby refid="_test_runner_8h" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestRunner.h</includedby>
    <includedby refid="_test_suite_8cpp" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.cpp</includedby>
    <includedby refid="_b_s_p_tree___test_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/BSPTree_Test.hh</includedby>
    <includedby refid="clip__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/clip_suite.t.hh</includedby>
    <includedby refid="diff__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/diff_suite.t.hh</includedby>
    <includedby refid="filter__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/filter_suite.t.hh</includedby>
    <includedby refid="geometry__iterator_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/geometry_iterator.t.hh</includedby>
    <includedby refid="lightcone__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/lightcone_suite.t.hh</includedby>
    <includedby refid="_multi_d_b___test_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/MultiDB_Test.hh</includedby>
    <includedby refid="sed__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/sed_suite.t.hh</includedby>
    <includedby refid="skymaker__suite_8t_8hh" local="no">/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/skymaker_suite.t.hh</includedby>
    <incdepgraph>
      <node id="892">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h</label>
        <link refid="TestSuite.h"/>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
      </node>
      <node id="894">
        <label>cxxtest/TestTracker.h</label>
        <link refid="_test_tracker_8h_source"/>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>cxxtest/Descriptions.h</label>
        <link refid="_descriptions_8h_source"/>
        <childnode refid="897" relation="include">
        </childnode>
      </node>
      <node id="895">
        <label>cxxtest/TestListener.h</label>
        <link refid="_test_listener_8h_source"/>
        <childnode refid="896" relation="include">
        </childnode>
      </node>
      <node id="899">
        <label>cxxtest/ValueTraits.h</label>
        <link refid="_value_traits_8h_source"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="898">
        <label>cxxtest/DummyDescriptions.h</label>
        <link refid="_dummy_descriptions_8h_source"/>
        <childnode refid="896" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>cxxtest/Flags.h</label>
        <link refid="_flags_8h_source"/>
      </node>
      <node id="897">
        <label>cxxtest/LinkedList.h</label>
        <link refid="_linked_list_8h_source"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="909">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/StdioFilePrinter.h</label>
        <link refid="_stdio_file_printer_8h_source"/>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="915">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/diff_suite.t.hh</label>
        <link refid="diff__suite_8t_8hh_source"/>
      </node>
      <node id="907">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/ErrorPrinter.h</label>
        <link refid="_error_printer_8h_source"/>
        <childnode refid="908" relation="include">
        </childnode>
      </node>
      <node id="901">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/base/tests/galaxy_suite.t.hh</label>
        <link refid="galaxy__suite_8t_8hh_source"/>
      </node>
      <node id="908">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/ParenPrinter.h</label>
        <link refid="_paren_printer_8h_source"/>
      </node>
      <node id="902">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/RealDescriptions.h</label>
        <link refid="_real_descriptions_8h_source"/>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="920">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/sed_suite.t.hh</label>
        <link refid="sed__suite_8t_8hh_source"/>
      </node>
      <node id="917">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/geometry_iterator.t.hh</label>
        <link refid="geometry__iterator_8t_8hh_source"/>
      </node>
      <node id="900">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h</label>
        <link refid="TestSuite.h"/>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
      </node>
      <node id="913">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/BSPTree_Test.hh</label>
        <link refid="_b_s_p_tree___test_8hh_source"/>
      </node>
      <node id="921">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/skymaker_suite.t.hh</label>
        <link refid="skymaker__suite_8t_8hh_source"/>
      </node>
      <node id="905">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestRunner.h</label>
        <link refid="_test_runner_8h_source"/>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/YesNoRunner.h</label>
        <link refid="_yes_no_runner_8h_source"/>
      </node>
      <node id="919">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/MultiDB_Test.hh</label>
        <link refid="_multi_d_b___test_8hh_source"/>
      </node>
      <node id="918">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/lightcone_suite.t.hh</label>
        <link refid="lightcone__suite_8t_8hh_source"/>
      </node>
      <node id="903">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/RealDescriptions.cpp</label>
        <link refid="_real_descriptions_8cpp_source"/>
        <childnode refid="904" relation="include">
        </childnode>
      </node>
      <node id="906">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/ErrorFormatter.h</label>
        <link refid="_error_formatter_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
      </node>
      <node id="916">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/filter_suite.t.hh</label>
        <link refid="filter__suite_8t_8hh_source"/>
      </node>
      <node id="904">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/Root.cpp</label>
        <link refid="_root_8cpp_source"/>
      </node>
      <node id="910">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/StdioPrinter.h</label>
        <link refid="_stdio_printer_8h_source"/>
      </node>
      <node id="914">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/clip_suite.t.hh</label>
        <link refid="clip__suite_8t_8hh_source"/>
      </node>
      <node id="912">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.cpp</label>
        <link refid="_test_suite_8cpp_source"/>
        <childnode refid="904" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cxx_test_1_1_test_suite" prot="public">CxxTest::TestSuite</innerclass>
    <innerclass refid="class_cxx_test_1_1_abort_test" prot="public">CxxTest::AbortTest</innerclass>
    <innernamespace refid="namespace_cxx_test">CxxTest</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_test_suite_8h_1aefd36bc9b819215a8c254f837ce37d8b" prot="public" static="no">
        <name>TS_ABORT</name>
        <param></param>
        <initializer>CxxTest::doAbortTest()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="31" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a03bc9e950e46b427b29e1eb80c04dfff" prot="public" static="no">
        <name>_TS_TRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="209" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aecbb5385c2977db4d94aec02ca75da1d" prot="public" static="no">
        <name>___TSM_CATCH</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="210" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a6579f5fc958bba71aa2321b03caea764" prot="public" static="no">
        <name>__TSM_CATCH</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="211" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a6727eddab5fcb41d632fc33d28098416" prot="public" static="no">
        <name>__TS_CATCH</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="212" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a21f89a6a7d17cc6508da42a4a1fff03c" prot="public" static="no">
        <name>_TS_CATCH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="213" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a8d463e3b94cd73f61f195c7628a68276" prot="public" static="no">
        <name>_TS_CATCH_TYPE</name>
        <param><defname>t</defname></param>
        <param><defname>b</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="214" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a18aab0bb592805a45beb18fad8dff4a2" prot="public" static="no">
        <name>_TS_LAST_CATCH</name>
        <param><defname>b</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="215" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a9d0d3a3d56a99aa02877924ae2af5be6" prot="public" static="no">
        <name>_TS_CATCH_ABORT</name>
        <param><defname>b</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="216" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a78c8458e3a554be40b4147cc3735f2bf" prot="public" static="no">
        <name>_TS_TRACE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>CxxTest::doTrace( (f), (l), TS_AS_STRING(e) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="220" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a97bafc621dda52dfd4af019ec00bd592" prot="public" static="no">
        <name>TS_TRACE</name>
        <param><defname>e</defname></param>
        <initializer>_TS_TRACE( __FILE__, __LINE__, e )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="221" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa786ee277ebdb04d0f28a22e5022ff07" prot="public" static="no">
        <name>_TS_WARN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>CxxTest::doWarn( (f), (l), TS_AS_STRING(e) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="224" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4bf51fe83d7f4ed774cd203ce45a581f" prot="public" static="no">
        <name>TS_WARN</name>
        <param><defname>e</defname></param>
        <initializer>_TS_WARN( __FILE__, __LINE__, e )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="225" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3b87164c960129ae3abf93b3cdbaf10b" prot="public" static="no">
        <name>_TS_FAIL</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>CxxTest::doFailTest( (f), (l), TS_AS_STRING(e) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="228" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1adbb19f6285322dae91369268a0021077" prot="public" static="no">
        <name>TS_FAIL</name>
        <param><defname>e</defname></param>
        <initializer>_TS_FAIL( __FILE__, __LINE__, e )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="229" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aff9e221f49978dd392125891d956bb25" prot="public" static="no">
        <name>___ETS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ if ( !(e) ) CxxTest::doFailAssert( (f), (l), #e, (m) ); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="232" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a7039a04de0e4d58908bfad325ed4f3aa" prot="public" static="no">
        <name>___TS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT(f,l,e,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="233" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa43402824757431b55b54d965d6b5c48" prot="public" static="no">
        <name>_ETS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>___ETS_ASSERT(f,l,e,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="235" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a229ce32e59ba5fe3aff8a96ba3db351f" prot="public" static="no">
        <name>_TS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT(f,l,e,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="236" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a367b24511192311b2fe7f49f22fdb8b6" prot="public" static="no">
        <name>ETS_ASSERT</name>
        <param><defname>e</defname></param>
        <initializer>_ETS_ASSERT(__FILE__,__LINE__,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="238" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1afe7c170c77cb07077a437839299ba79f" prot="public" static="no">
        <name>TS_ASSERT</name>
        <param><defname>e</defname></param>
        <initializer>_TS_ASSERT(__FILE__,__LINE__,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="239" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a2d3c0ed0fe0827b7bc81fd1333129a0e" prot="public" static="no">
        <name>_ETSM_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>___ETS_ASSERT(f,l,e,TS_AS_STRING(m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="241" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a8cbb571d076aa13aa85f5bc8300c73a0" prot="public" static="no">
        <name>_TSM_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT(f,l,e,TS_AS_STRING(m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="242" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a1be685cb183e4e785a7eb4d8bfeba8d0" prot="public" static="no">
        <name>ETSM_ASSERT</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>_ETSM_ASSERT(__FILE__,__LINE__,m,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="244" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aadae5339aa47072e8f0947afacf43025" prot="public" static="no">
        <name>TSM_ASSERT</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>_TSM_ASSERT(__FILE__,__LINE__,m,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="245" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a000488ff5f7fb0c55939d02919b84dc2" prot="public" static="no">
        <name>___ETS_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertEquals( (f), (l), #x, (x), #y, (y), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="248" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ad7f14cac0316aaac310d3aa94162924c" prot="public" static="no">
        <name>___TS_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_EQUALS(f,l,x,y,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="249" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a18b80f6f91c25a73773a019d50453364" prot="public" static="no">
        <name>_ETS_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_EQUALS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="251" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3c5457623cc0eda358f9276b11e4c00e" prot="public" static="no">
        <name>_TS_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_EQUALS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="252" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5ceaa7a7359a1e836b4538d564b16a66" prot="public" static="no">
        <name>ETS_ASSERT_EQUALS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETS_ASSERT_EQUALS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="254" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a74edfa093ef6af93b073097b7f96540e" prot="public" static="no">
        <name>TS_ASSERT_EQUALS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TS_ASSERT_EQUALS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="255" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aab36f6c92f3083312d7f68e591b27c05" prot="public" static="no">
        <name>_ETSM_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_EQUALS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="257" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1af93fbd6eba2764663f4ffb9afd27028b" prot="public" static="no">
        <name>_TSM_ASSERT_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_EQUALS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="258" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aec37a5aa0946576086b86b66977bbbe0" prot="public" static="no">
        <name>ETSM_ASSERT_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETSM_ASSERT_EQUALS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="260" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ad8aa4ab499030341cfaf9d141ab5a3a2" prot="public" static="no">
        <name>TSM_ASSERT_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TSM_ASSERT_EQUALS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="261" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ada2398683fee55a615d3e2719e1d65f4" prot="public" static="no">
        <name>___ETS_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertSameData( (f), (l), #x, (x), #y, (y), #s, (s), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="264" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a95472b56ddfb801730b76b7ac252318c" prot="public" static="no">
        <name>___TS_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_SAME_DATA(f,l,x,y,s,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="265" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3fd2226b2a717fd8ffd0c1c21af7b660" prot="public" static="no">
        <name>_ETS_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="267" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aceb94085fb8e67be0f83fcd929b88557" prot="public" static="no">
        <name>_TS_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>___TS_ASSERT_SAME_DATA(f,l,x,y,s,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="268" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5c6614948404f79d459573a113cf7a1c" prot="public" static="no">
        <name>ETS_ASSERT_SAME_DATA</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>_ETS_ASSERT_SAME_DATA(__FILE__,__LINE__,x,y,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="270" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a59d837d3733ecea66005720b6c2048f9" prot="public" static="no">
        <name>TS_ASSERT_SAME_DATA</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>_TS_ASSERT_SAME_DATA(__FILE__,__LINE__,x,y,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="271" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a83d2a65399e3899e204e728618cefcbc" prot="public" static="no">
        <name>_ETSM_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="273" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aacb371586ba32a807ba603dc37baaaa5" prot="public" static="no">
        <name>_TSM_ASSERT_SAME_DATA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>___TS_ASSERT_SAME_DATA(f,l,x,y,s,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="274" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a81445a07fdc77ad19d48756e836a8ad5" prot="public" static="no">
        <name>ETSM_ASSERT_SAME_DATA</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>_ETSM_ASSERT_SAME_DATA(__FILE__,__LINE__,m,x,y,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="276" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a46a5dbd4c4347b158400528f15fa6065" prot="public" static="no">
        <name>TSM_ASSERT_SAME_DATA</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>_TSM_ASSERT_SAME_DATA(__FILE__,__LINE__,m,x,y,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="277" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4ae0fa7b6e485c722a4ad9bf58f1900a" prot="public" static="no">
        <name>___ETS_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertDiffers( (f), (l), #x, (x), #y, (y), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="280" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aab51f13186a11e2c967c904f4bf3c588" prot="public" static="no">
        <name>___TS_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_DIFFERS(f,l,x,y,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="281" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a40ad7cfe83f70187da434979720d6302" prot="public" static="no">
        <name>_ETS_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_DIFFERS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="283" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ad1c245c31d245408905cdf843d3adf74" prot="public" static="no">
        <name>_TS_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_DIFFERS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="284" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ac201b6bd4308c38cfc2e3bd595480ff1" prot="public" static="no">
        <name>ETS_ASSERT_DIFFERS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETS_ASSERT_DIFFERS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="286" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa20ebfe0447726828a5202959e2c60e7" prot="public" static="no">
        <name>TS_ASSERT_DIFFERS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TS_ASSERT_DIFFERS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="287" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a8c9890645e623426a00686c72b758b8a" prot="public" static="no">
        <name>_ETSM_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_DIFFERS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="289" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1abd4ce30a9a9f44d13df03c624c635637" prot="public" static="no">
        <name>_TSM_ASSERT_DIFFERS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_DIFFERS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="290" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a30c733a4adcdf76bfc51af0a8641c1db" prot="public" static="no">
        <name>ETSM_ASSERT_DIFFERS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETSM_ASSERT_DIFFERS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="292" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a904debeac24629d85989d1bbb9e13838" prot="public" static="no">
        <name>TSM_ASSERT_DIFFERS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TSM_ASSERT_DIFFERS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="293" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa2db2f776c621a2f8c40933472af89ca" prot="public" static="no">
        <name>___ETS_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertLessThan( (f), (l), #x, (x), #y, (y), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="296" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a81dce834fe0e940141d0b6725efc356c" prot="public" static="no">
        <name>___TS_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_LESS_THAN(f,l,x,y,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="297" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3c568786b3aef8555fc944c1ae827c1b" prot="public" static="no">
        <name>_ETS_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_LESS_THAN(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="299" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a7125de5e48d74e7aa7ce180cfb107b2b" prot="public" static="no">
        <name>_TS_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_LESS_THAN(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="300" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a990549f9ccacddc03b055b6077103759" prot="public" static="no">
        <name>ETS_ASSERT_LESS_THAN</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETS_ASSERT_LESS_THAN(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="302" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa2dabec7eb836e69b0897ca15d2b4d92" prot="public" static="no">
        <name>TS_ASSERT_LESS_THAN</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TS_ASSERT_LESS_THAN(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="303" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a979261c3c4ff06fc83263bd310da137f" prot="public" static="no">
        <name>_ETSM_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_LESS_THAN(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="305" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4f1fe6e04b8e7b9774724fd2c6184597" prot="public" static="no">
        <name>_TSM_ASSERT_LESS_THAN</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_LESS_THAN(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="306" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a49e5c1180bb98ea61cddbb4904f6d53d" prot="public" static="no">
        <name>ETSM_ASSERT_LESS_THAN</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETSM_ASSERT_LESS_THAN(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="308" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ac32c984a24516def5e8aba7335c0ddae" prot="public" static="no">
        <name>TSM_ASSERT_LESS_THAN</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TSM_ASSERT_LESS_THAN(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="309" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ac17c0e003aa95a89f8704a4cb93582d7" prot="public" static="no">
        <name>___ETS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertLessThanEquals( (f), (l), #x, (x), #y, (y), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="313" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a48097e18011de74a5dc0fad041a4b4fb" prot="public" static="no">
        <name>___TS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="315" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5aabb167d30e78cf2519daaf40d28d02" prot="public" static="no">
        <name>_ETS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="317" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a70c9780c2cdb89b703c0d240f45a2404" prot="public" static="no">
        <name>_TS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="318" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5d1994b5dc36dbe5ea2b692ff33a0109" prot="public" static="no">
        <name>ETS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETS_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="320" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aedb6ee23f66b24d0d2a123093076891c" prot="public" static="no">
        <name>TS_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TS_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="321" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a9b0a77bea233f2f5ce21e01e775cd4e0" prot="public" static="no">
        <name>_ETSM_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="323" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a9d2303d6c4728465e75a8e4dd4fcd643" prot="public" static="no">
        <name>_TSM_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="324" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ad03c76b0f80c9ca80f5552224cf1a4a1" prot="public" static="no">
        <name>ETSM_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETSM_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="326" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4ca8efe5b7603f85040482eef45e7d6f" prot="public" static="no">
        <name>TSM_ASSERT_LESS_THAN_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TSM_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,m,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="327" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1af14bb38ae1a54f9bce0262cefb34d872" prot="public" static="no">
        <name>___ETS_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertPredicate( (f), (l), #p, p(), #x, (x), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="331" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3e162ce00d2f8d385955fc6827314224" prot="public" static="no">
        <name>___TS_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_PREDICATE(f,l,p,x,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="333" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a11e777d185e6845e7fa926bd6d22514a" prot="public" static="no">
        <name>_ETS_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>___ETS_ASSERT_PREDICATE(f,l,p,x,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="335" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a66dbddbb2be8d69d851638e6d294883c" prot="public" static="no">
        <name>_TS_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>___TS_ASSERT_PREDICATE(f,l,p,x,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="336" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a09cb3f5f084816bdd0f223ebc0a85785" prot="public" static="no">
        <name>ETS_ASSERT_PREDICATE</name>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>_ETS_ASSERT_PREDICATE(__FILE__,__LINE__,p,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="338" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a0c23a40463df625f62edbe3271579e1d" prot="public" static="no">
        <name>TS_ASSERT_PREDICATE</name>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>_TS_ASSERT_PREDICATE(__FILE__,__LINE__,p,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="339" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a51a2d6fbe11af8d1d2eb64c637f77b70" prot="public" static="no">
        <name>_ETSM_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>___ETS_ASSERT_PREDICATE(f,l,p,x,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="341" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ae469a3ed1e24e0f11017b3eda20966e6" prot="public" static="no">
        <name>_TSM_ASSERT_PREDICATE</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>___TS_ASSERT_PREDICATE(f,l,p,x,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="342" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a872476967b50be9e85f890bcde0ce498" prot="public" static="no">
        <name>ETSM_ASSERT_PREDICATE</name>
        <param><defname>m</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>_ETSM_ASSERT_PREDICATE(__FILE__,__LINE__,m,p,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="344" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a6805b4d96359c297eee09d2af9dbf60b" prot="public" static="no">
        <name>TSM_ASSERT_PREDICATE</name>
        <param><defname>m</defname></param>
        <param><defname>p</defname></param>
        <param><defname>x</defname></param>
        <initializer>_TSM_ASSERT_PREDICATE(__FILE__,__LINE__,m,p,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="345" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a1b4df226c1398526d827c9a242b102e1" prot="public" static="no">
        <name>___ETS_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertRelation( (f), (l), #r, r(), #x, (x), #y, (y), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="349" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a7a65e2a8eccdb50957fd0c192a271573" prot="public" static="no">
        <name>___TS_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_RELATION(f,l,r,x,y,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="351" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1af18d753cec6cc0b17cd4396ae7875c15" prot="public" static="no">
        <name>_ETS_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_RELATION(f,l,r,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="353" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a1a3b5fdde07d1d084941bc05a907bd2f" prot="public" static="no">
        <name>_TS_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_RELATION(f,l,r,x,y,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="354" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a942d0e10707633cbe7fa8c20ce759d03" prot="public" static="no">
        <name>ETS_ASSERT_RELATION</name>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETS_ASSERT_RELATION(__FILE__,__LINE__,r,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="356" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a836ab906c692f7dae2f5ae63401cb9a8" prot="public" static="no">
        <name>TS_ASSERT_RELATION</name>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TS_ASSERT_RELATION(__FILE__,__LINE__,r,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="357" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a44201309e2923ee29f6786908ec33d43" prot="public" static="no">
        <name>_ETSM_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___ETS_ASSERT_RELATION(f,l,r,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="359" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ab0ae799a3a063ddab8759518343cd186" prot="public" static="no">
        <name>_TSM_ASSERT_RELATION</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>___TS_ASSERT_RELATION(f,l,r,x,y,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="360" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a427adf3a65fe05370e31d43bbc7488c2" prot="public" static="no">
        <name>ETSM_ASSERT_RELATION</name>
        <param><defname>m</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_ETSM_ASSERT_RELATION(__FILE__,__LINE__,m,r,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="362" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aecfe9953f5de60984e237915e7593235" prot="public" static="no">
        <name>TSM_ASSERT_RELATION</name>
        <param><defname>m</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>_TSM_ASSERT_RELATION(__FILE__,__LINE__,m,r,x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="363" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ac02f7aabbe045c78cbe896ba9f5b246b" prot="public" static="no">
        <name>___ETS_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <param><defname>m</defname></param>
        <initializer>CxxTest::doAssertDelta( (f), (l), #x, (x), #y, (y), #d, (d), (m) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="366" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a27b4afe95ec6be8db329320a45a9ce2f" prot="public" static="no">
        <name>___TS_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ _TS_TRY { ___ETS_ASSERT_DELTA(f,l,x,y,d,m); } __TS_CATCH(f,l) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="367" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5ff2b7106e0ace09f78366d6c42f66ee" prot="public" static="no">
        <name>_ETS_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>___ETS_ASSERT_DELTA(f,l,x,y,d,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="369" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a659585c59b4814a3b8a701b810cfd1d9" prot="public" static="no">
        <name>_TS_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>___TS_ASSERT_DELTA(f,l,x,y,d,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="370" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a8f8a1a263a48b408bb642bfa0c5645a7" prot="public" static="no">
        <name>ETS_ASSERT_DELTA</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>_ETS_ASSERT_DELTA(__FILE__,__LINE__,x,y,d)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="372" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5ddd9db15762c3236c1ae525f09b08b4" prot="public" static="no">
        <name>TS_ASSERT_DELTA</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>_TS_ASSERT_DELTA(__FILE__,__LINE__,x,y,d)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="373" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5d38507e20fc2a7e0322375cdd18f299" prot="public" static="no">
        <name>_ETSM_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>___ETS_ASSERT_DELTA(f,l,x,y,d,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="375" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a04e07d348b07c705c4d312288f3bf1d8" prot="public" static="no">
        <name>_TSM_ASSERT_DELTA</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>___TS_ASSERT_DELTA(f,l,x,y,d,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="376" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1af8c8b17edfd91b967a326dcfccf4c256" prot="public" static="no">
        <name>ETSM_ASSERT_DELTA</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>_ETSM_ASSERT_DELTA(__FILE__,__LINE__,m,x,y,d)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="378" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ad03b0e554e5b12d6bdc5a034c01b3e38" prot="public" static="no">
        <name>TSM_ASSERT_DELTA</name>
        <param><defname>m</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>_TSM_ASSERT_DELTA(__FILE__,__LINE__,m,x,y,d)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="379" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4317cb8babc1a4728ed08b977192f26b" prot="public" static="no">
        <name>___TS_ASSERT_THROWS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ \
            bool _ts_threw_expected = false, _ts_threw_else = false; \
            _TS_TRY { e; } \
            _TS_CATCH_TYPE( (t), { _ts_threw_expected = true; } ) \
            _TS_CATCH_ABORT( { throw; } ) \
            _TS_LAST_CATCH( { _ts_threw_else = true; } ) \
            if ( !_ts_threw_expected ) { CxxTest::doFailAssertThrows( (f), (l), #e, #t, _ts_threw_else, (m) ); } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="388" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a2bc6100e47e609ee1005a6c793e29a20" prot="public" static="no">
        <name>_TS_ASSERT_THROWS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <initializer>___TS_ASSERT_THROWS(f,l,e,t,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="390" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a84824c6aa120bd400aff4c6a7c655135" prot="public" static="no">
        <name>TS_ASSERT_THROWS</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <initializer>_TS_ASSERT_THROWS(__FILE__,__LINE__,e,t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="391" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a688083f6108c24fe229660aa6827e34c" prot="public" static="no">
        <name>_TSM_ASSERT_THROWS</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <initializer>___TS_ASSERT_THROWS(f,l,e,t,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="393" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a869d60a81653c9f1fe708b724e36d537" prot="public" static="no">
        <name>TSM_ASSERT_THROWS</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <initializer>_TSM_ASSERT_THROWS(__FILE__,__LINE__,m,e,t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="394" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a39aeeecf59697adb40569284e423b89e" prot="public" static="no">
        <name>___TS_ASSERT_THROWS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>a</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ \
            bool _ts_threw_expected = false, _ts_threw_else = false; \
            _TS_TRY { e; } \
            _TS_CATCH_TYPE( (t), { a; _ts_threw_expected = true; } ) \
            _TS_CATCH_ABORT( { throw; } ) \
            _TS_LAST_CATCH( { _ts_threw_else = true; } ) \
            if ( !_ts_threw_expected ) { CxxTest::doFailAssertThrows( (f), (l), #e, #t, _ts_threw_else, (m) ); } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="403" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a498c1e08d3747190b17f09704799f045" prot="public" static="no">
        <name>_TS_ASSERT_THROWS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>a</defname></param>
        <initializer>___TS_ASSERT_THROWS_ASSERT(f,l,e,t,a,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="405" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a0179ee5482b7a2f55fc23c17d7ba507f" prot="public" static="no">
        <name>TS_ASSERT_THROWS_ASSERT</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>a</defname></param>
        <initializer>_TS_ASSERT_THROWS_ASSERT(__FILE__,__LINE__,e,t,a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="406" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a9e90a246cf377edba3f0aac0cca2561d" prot="public" static="no">
        <name>_TSM_ASSERT_THROWS_ASSERT</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>a</defname></param>
        <initializer>___TS_ASSERT_THROWS_ASSERT(f,l,e,t,a,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="408" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a575bd3c42fa1658fa3bb68e80f0e20e8" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_ASSERT</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>a</defname></param>
        <initializer>_TSM_ASSERT_THROWS_ASSERT(__FILE__,__LINE__,m,e,t,a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="409" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a253606cb8ffd7316a6128bc90a296bd5" prot="public" static="no">
        <name>TS_ASSERT_THROWS_EQUALS</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_EQUALS(x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="412" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a6dbbd89193a3884bb7dc1df7f5db57a7" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_EQUALS(m,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="413" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aad46b165fdcde6b1b676c26fa1ba8d70" prot="public" static="no">
        <name>TS_ASSERT_THROWS_DIFFERS</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_DIFFERS(x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="416" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a29ffecbfa16e36fe0f4f1ae86e55a5fb" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_DIFFERS</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_DIFFERS(m,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="417" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a2ce85216f599d3f8aac37611628efd7f" prot="public" static="no">
        <name>TS_ASSERT_THROWS_DELTA</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_DELTA(x,y,d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="420" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a7b46c249a865519d0d7f6135455f43ca" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_DELTA</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>d</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_DELTA(m,x,y,d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="421" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1acd40a4750fe2d1d36ca2934801537d87" prot="public" static="no">
        <name>TS_ASSERT_THROWS_SAME_DATA</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_SAME_DATA(x,y,s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="424" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4b0eb63ea95e1ebc86c3340c6a1567bc" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_SAME_DATA</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>s</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_SAME_DATA(m,x,y,s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="425" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a1e19f9656dff8d45b133e160557bd355" prot="public" static="no">
        <name>TS_ASSERT_THROWS_LESS_THAN</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_LESS_THAN(x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="428" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ac12c2a9857359442610817009080816e" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_LESS_THAN</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_LESS_THAN(m,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="429" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4033508e049b91487ecb135c3e978d27" prot="public" static="no">
        <name>TS_ASSERT_THROWS_LESS_THAN_EQUALS</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_LESS_THAN_EQUALS(x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="432" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a37835246ba647c7621e2fdb6e5f98ecf" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_LESS_THAN_EQUALS</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_LESS_THAN_EQUALS(m,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="433" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ae30d11211ea490646179a8d678d35ec0" prot="public" static="no">
        <name>TS_ASSERT_THROWS_PREDICATE</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>p</defname></param>
        <param><defname>v</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_PREDICATE(p,v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="436" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ae9ae848a4e2647b9d3f6a408e75fbbbf" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_PREDICATE</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>p</defname></param>
        <param><defname>v</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_PREDICATE(m,p,v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="437" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a2be6a29ec339c0d7cb2b81b64e079941" prot="public" static="no">
        <name>TS_ASSERT_THROWS_RELATION</name>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_RELATION(r,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="440" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1aa3e181b083cccd4503559067db6bd7f6" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_RELATION</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>t</defname></param>
        <param><defname>r</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_RELATION(m,r,x,y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="441" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a77035ce77ed8357f47d1c49d00660c9f" prot="public" static="no">
        <name>___TS_ASSERT_THROWS_ANYTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ \
            bool _ts_threw = false; \
            _TS_TRY { e; } \
            _TS_LAST_CATCH( { _ts_threw = true; } ) \
            if ( !_ts_threw ) { CxxTest::doFailAssertThrows( (f), (l), #e, &quot;...&quot;, false, (m) ); } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="448" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1acb0095524310806ffa8220dcd15e1316" prot="public" static="no">
        <name>_TS_ASSERT_THROWS_ANYTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT_THROWS_ANYTHING(f,l,e,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="450" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a29777bfc8dfed3bb1dbf02ec0a60ee66" prot="public" static="no">
        <name>TS_ASSERT_THROWS_ANYTHING</name>
        <param><defname>e</defname></param>
        <initializer>_TS_ASSERT_THROWS_ANYTHING(__FILE__, __LINE__, e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="451" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a44603327aa63500a48875c70e82027ff" prot="public" static="no">
        <name>_TSM_ASSERT_THROWS_ANYTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT_THROWS_ANYTHING(f,l,e,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="453" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a83f59dc2b918a1796c838fc007007a75" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_ANYTHING</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>_TSM_ASSERT_THROWS_ANYTHING(__FILE__,__LINE__,m,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="454" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1ade44f528d0ff83fd0dc4adec5e79012f" prot="public" static="no">
        <name>___TS_ASSERT_THROWS_NOTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <param><defname>m</defname></param>
        <initializer>{ \
            _TS_TRY { e; } \
            _TS_CATCH_ABORT( { throw; } ) \
            _TS_LAST_CATCH( { CxxTest::doFailAssertThrowsNot( (f), (l), #e, (m) ); } ) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="460" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a67744626938c9cc15a68741b3648abe2" prot="public" static="no">
        <name>_TS_ASSERT_THROWS_NOTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT_THROWS_NOTHING(f,l,e,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="462" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1af9af53467910be4b100744e50404e6fd" prot="public" static="no">
        <name>TS_ASSERT_THROWS_NOTHING</name>
        <param><defname>e</defname></param>
        <initializer>_TS_ASSERT_THROWS_NOTHING(__FILE__,__LINE__,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="463" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a5d03f5fc791509fcafa6392bde6f146c" prot="public" static="no">
        <name>_TSM_ASSERT_THROWS_NOTHING</name>
        <param><defname>f</defname></param>
        <param><defname>l</defname></param>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>___TS_ASSERT_THROWS_NOTHING(f,l,e,TS_AS_STRING(m))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="465" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3e0d45a24f641a9e3ad61f591395a861" prot="public" static="no">
        <name>TSM_ASSERT_THROWS_NOTHING</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>_TSM_ASSERT_THROWS_NOTHING(__FILE__,__LINE__,m,e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="466" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a555cbfcc6c0626fe1927424a20370565" prot="public" static="no">
        <name>CXXTEST_COMPARISONS</name>
        <param><defname>CXXTEST_X</defname></param>
        <param><defname>CXXTEST_Y</defname></param>
        <param><defname>CXXTEST_T</defname></param>
        <initializer>inline bool equals( CXXTEST_X x, CXXTEST_Y y ) { return (((CXXTEST_T)x) == ((CXXTEST_T)y)); } \
    inline bool equals( CXXTEST_Y y, CXXTEST_X x ) { return (((CXXTEST_T)y) == ((CXXTEST_T)x)); } \
    inline bool differs( CXXTEST_X x, CXXTEST_Y y ) { return (((CXXTEST_T)x) != ((CXXTEST_T)y)); } \
    inline bool differs( CXXTEST_Y y, CXXTEST_X x ) { return (((CXXTEST_T)y) != ((CXXTEST_T)x)); } \
    inline bool lessThan( CXXTEST_X x, CXXTEST_Y y ) { return (((CXXTEST_T)x) &lt; ((CXXTEST_T)y)); } \
    inline bool lessThan( CXXTEST_Y y, CXXTEST_X x ) { return (((CXXTEST_T)y) &lt; ((CXXTEST_T)x)); } \
    inline bool lessThanEquals( CXXTEST_X x, CXXTEST_Y y ) { return (((CXXTEST_T)x) &lt;= ((CXXTEST_T)y)); } \
    inline bool lessThanEquals( CXXTEST_Y y, CXXTEST_X x ) { return (((CXXTEST_T)y) &lt;= ((CXXTEST_T)x)); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="480" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a4dedd3dc2207e2774d1d73966431ab43" prot="public" static="no">
        <name>CXXTEST_INTEGRAL</name>
        <param><defname>CXXTEST_T</defname></param>
        <initializer>CXXTEST_COMPARISONS( signed CXXTEST_T, unsigned CXXTEST_T, unsigned CXXTEST_T )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="483" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_test_suite_8h_1a3a239bb50125a0f979d1222d13feadf1" prot="public" static="no">
        <name>CXXTEST_SMALL_BIG</name>
        <param><defname>CXXTEST_SMALL</defname></param>
        <param><defname>CXXTEST_BIG</defname></param>
        <initializer>CXXTEST_COMPARISONS( signed CXXTEST_SMALL, unsigned CXXTEST_BIG, unsigned CXXTEST_BIG ) \
    CXXTEST_COMPARISONS( signed CXXTEST_BIG, unsigned CXXTEST_SMALL, unsigned CXXTEST_BIG )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" line="495" bodyfile="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__cxxtest__TestSuite_h__</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__cxxtest__TestSuite_h__</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>TestSuite<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>all<sp/>test<sp/>suites.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>define<sp/>a<sp/>test<sp/>suite,<sp/>derive<sp/>from<sp/>this<sp/>class<sp/>and<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>member<sp/>functions<sp/>called<sp/>void<sp/>test*();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/Flags.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/TestTracker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/Descriptions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/ValueTraits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_CXXTEST_HAVE_STD</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_CXXTEST_HAVE_STD</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CxxTest</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21" refid="class_cxx_test_1_1_test_suite" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cxx_test_1_1_test_suite" kindref="compound">TestSuite</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_cxx_test_1_1_test_suite" kindref="compound">TestSuite</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUp();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tearDown();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="class_cxx_test_1_1_abort_test" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cxx_test_1_1_abort_test" kindref="compound">AbortTest</ref><sp/>{};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAbortTest();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ABORT()<sp/>CxxTest::doAbortTest()</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>abortTestOnFail();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAbortTestOnFail(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>CXXTEST_DEFAULT_ABORT<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxDumpSize();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxDumpSize(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>CXXTEST_MAX_DUMP_SIZE<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doTrace(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doWarn(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFailTest(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFailAssert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expression,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equals(<sp/>X<sp/>x,<sp/>Y<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertEquals(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!equals(<sp/>x,<sp/>y<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertEquals(<sp/>file,<sp/>line,<sp/>xExpr,<sp/>yExpr,<sp/>TS_AS_STRING(x),<sp/>TS_AS_STRING(y)<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertSameData(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sizeExpr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>differs(<sp/>X<sp/>x,<sp/>Y<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertDiffers(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!differs(<sp/>x,<sp/>y<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertDiffers(<sp/>file,<sp/>line,<sp/>xExpr,<sp/>yExpr,<sp/>TS_AS_STRING(x)<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lessThan(<sp/>X<sp/>x,<sp/>Y<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>y);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertLessThan(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!lessThan(x,<sp/>y)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertLessThan(<sp/>file,<sp/>line,<sp/>xExpr,<sp/>yExpr,<sp/>TS_AS_STRING(x),<sp/>TS_AS_STRING(y)<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lessThanEquals(<sp/>X<sp/>x,<sp/>Y<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>y);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertLessThanEquals(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!lessThanEquals(<sp/>x,<sp/>y<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertLessThanEquals(<sp/>file,<sp/>line,<sp/>xExpr,<sp/>yExpr,<sp/>TS_AS_STRING(x),<sp/>TS_AS_STRING(y)<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertPredicate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pExpr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>P<sp/>&amp;p,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!p(<sp/>x<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertPredicate(<sp/>file,<sp/>line,<sp/>pExpr,<sp/>xExpr,<sp/>TS_AS_STRING(x)<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertRelation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rExpr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>R<sp/>&amp;r,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r(<sp/>x,<sp/>y<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertRelation(<sp/>file,<sp/>line,<sp/>rExpr,<sp/>xExpr,<sp/>yExpr,<sp/>TS_AS_STRING(x),<sp/>TS_AS_STRING(y)<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta(<sp/>X<sp/>x,<sp/>Y<sp/>y,<sp/>D<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((y<sp/>&gt;=<sp/>x<sp/>-<sp/>d)<sp/>&amp;&amp;<sp/>(y<sp/>&lt;=<sp/>x<sp/>+<sp/>d));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Y,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAssertDelta(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xExpr,<sp/>X<sp/>x,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yExpr,<sp/>Y<sp/>y,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dExpr,<sp/>D<sp/>d,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!delta(<sp/>x,<sp/>y,<sp/>d<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>message<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedTest(<sp/>file,<sp/>line,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker().failedAssertDelta(<sp/>file,<sp/>line,<sp/>xExpr,<sp/>yExpr,<sp/>dExpr,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_AS_STRING(x),<sp/>TS_AS_STRING(y),<sp/>TS_AS_STRING(d)<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TS_ABORT();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFailAssertThrows(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>otherThrown,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFailAssertThrowsNot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expression,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_CXXTEST_HAVE_EH</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_TRY<sp/>try</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH_TYPE(t,<sp/>b)<sp/>catch<sp/>t<sp/>b</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH_ABORT(b)<sp/>_TS_CATCH_TYPE(<sp/>(const<sp/>CxxTest::AbortTest<sp/>&amp;),<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_LAST_CATCH(b)<sp/>_TS_CATCH_TYPE(<sp/>(...),<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TSM_LAST_CATCH(f,l,m)<sp/>_TS_LAST_CATCH(<sp/>{<sp/>(CxxTest::tracker()).failedTest(f,l,m);<sp/>}<sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifdef<sp/>_CXXTEST_HAVE_STD</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>___TSM_CATCH(f,l,m)<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catch(const<sp/>std::exception<sp/>&amp;e)<sp/>{<sp/>(CxxTest::tracker()).failedTest(f,l,e.what());<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TSM_LAST_CATCH(f,l,m)</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>//<sp/>!_CXXTEST_HAVE_STD</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>___TSM_CATCH(f,l,m)<sp/>_TSM_LAST_CATCH(f,l,m)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/>//<sp/>_CXXTEST_HAVE_STD</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>__TSM_CATCH(f,l,m)<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_ABORT(<sp/>{<sp/>throw;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___TSM_CATCH(f,l,m)</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>__TS_CATCH(f,l)<sp/>__TSM_CATCH(f,l,&quot;Unhandled<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH<sp/>__TS_CATCH(__FILE__,__LINE__)</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else<sp/>//<sp/>!_CXXTEST_HAVE_EH</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_TRY</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>___TSM_CATCH(f,l,m)</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>__TSM_CATCH(f,l,m)</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>__TS_CATCH(f,l)</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH_TYPE(t,<sp/>b)</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_LAST_CATCH(b)</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_TS_CATCH_ABORT(b)</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif<sp/>//<sp/>_CXXTEST_HAVE_EH</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_TRACE(f,l,e)<sp/>CxxTest::doTrace(<sp/>(f),<sp/>(l),<sp/>TS_AS_STRING(e)<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_TRACE(e)<sp/>_TS_TRACE(<sp/>__FILE__,<sp/>__LINE__,<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_WARN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_WARN(f,l,e)<sp/>CxxTest::doWarn(<sp/>(f),<sp/>(l),<sp/>TS_AS_STRING(e)<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_WARN(e)<sp/>_TS_WARN(<sp/>__FILE__,<sp/>__LINE__,<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_FAIL(f,l,e)<sp/>CxxTest::doFailTest(<sp/>(f),<sp/>(l),<sp/>TS_AS_STRING(e)<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_FAIL(e)<sp/>_TS_FAIL(<sp/>__FILE__,<sp/>__LINE__,<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT(f,l,e,m)<sp/>{<sp/>if<sp/>(<sp/>!(e)<sp/>)<sp/>CxxTest::doFailAssert(<sp/>(f),<sp/>(l),<sp/>#e,<sp/>(m)<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT(f,l,e,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT(f,l,e,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT(f,l,e)<sp/>___ETS_ASSERT(f,l,e,0)</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT(f,l,e)<sp/>___TS_ASSERT(f,l,e,0)</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT(e)<sp/>_ETS_ASSERT(__FILE__,__LINE__,e)</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT(e)<sp/>_TS_ASSERT(__FILE__,__LINE__,e)</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT(f,l,m,e)<sp/>___ETS_ASSERT(f,l,e,TS_AS_STRING(m)<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT(f,l,m,e)<sp/>___TS_ASSERT(f,l,e,TS_AS_STRING(m)<sp/>)</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT(m,e)<sp/>_ETSM_ASSERT(__FILE__,__LINE__,m,e)</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT(m,e)<sp/>_TSM_ASSERT(__FILE__,__LINE__,m,e)</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_EQUALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_EQUALS(f,l,x,y,m)<sp/>CxxTest::doAssertEquals(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_EQUALS(f,l,x,y,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_EQUALS(f,l,x,y,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_EQUALS(f,l,x,y)<sp/>___ETS_ASSERT_EQUALS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_EQUALS(f,l,x,y)<sp/>___TS_ASSERT_EQUALS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_EQUALS(x,y)<sp/>_ETS_ASSERT_EQUALS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_EQUALS(x,y)<sp/>_TS_ASSERT_EQUALS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_EQUALS(f,l,m,x,y)<sp/>___ETS_ASSERT_EQUALS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_EQUALS(f,l,m,x,y)<sp/>___TS_ASSERT_EQUALS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_EQUALS(m,x,y)<sp/>_ETSM_ASSERT_EQUALS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_EQUALS(m,x,y)<sp/>_TSM_ASSERT_EQUALS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_SAME_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,m)<sp/>CxxTest::doAssertSameData(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>#s,<sp/>(s),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_SAME_DATA(f,l,x,y,s,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_SAME_DATA(f,l,x,y,s)<sp/>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,0)</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_SAME_DATA(f,l,x,y,s)<sp/>___TS_ASSERT_SAME_DATA(f,l,x,y,s,0)</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_SAME_DATA(x,y,s)<sp/>_ETS_ASSERT_SAME_DATA(__FILE__,__LINE__,x,y,s)</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_SAME_DATA(x,y,s)<sp/>_TS_ASSERT_SAME_DATA(__FILE__,__LINE__,x,y,s)</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_SAME_DATA(f,l,m,x,y,s)<sp/>___ETS_ASSERT_SAME_DATA(f,l,x,y,s,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_SAME_DATA(f,l,m,x,y,s)<sp/>___TS_ASSERT_SAME_DATA(f,l,x,y,s,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_SAME_DATA(m,x,y,s)<sp/>_ETSM_ASSERT_SAME_DATA(__FILE__,__LINE__,m,x,y,s)</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_SAME_DATA(m,x,y,s)<sp/>_TSM_ASSERT_SAME_DATA(__FILE__,__LINE__,m,x,y,s)</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_DIFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_DIFFERS(f,l,x,y,m)<sp/>CxxTest::doAssertDiffers(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_DIFFERS(f,l,x,y,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_DIFFERS(f,l,x,y,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_DIFFERS(f,l,x,y)<sp/>___ETS_ASSERT_DIFFERS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_DIFFERS(f,l,x,y)<sp/>___TS_ASSERT_DIFFERS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_DIFFERS(x,y)<sp/>_ETS_ASSERT_DIFFERS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_DIFFERS(x,y)<sp/>_TS_ASSERT_DIFFERS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_DIFFERS(f,l,m,x,y)<sp/>___ETS_ASSERT_DIFFERS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_DIFFERS(f,l,m,x,y)<sp/>___TS_ASSERT_DIFFERS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_DIFFERS(m,x,y)<sp/>_ETSM_ASSERT_DIFFERS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_DIFFERS(m,x,y)<sp/>_TSM_ASSERT_DIFFERS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_LESS_THAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_LESS_THAN(f,l,x,y,m)<sp/>CxxTest::doAssertLessThan(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_LESS_THAN(f,l,x,y,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_LESS_THAN(f,l,x,y,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_LESS_THAN(f,l,x,y)<sp/>___ETS_ASSERT_LESS_THAN(f,l,x,y,0)</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_LESS_THAN(f,l,x,y)<sp/>___TS_ASSERT_LESS_THAN(f,l,x,y,0)</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_LESS_THAN(x,y)<sp/>_ETS_ASSERT_LESS_THAN(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_LESS_THAN(x,y)<sp/>_TS_ASSERT_LESS_THAN(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_LESS_THAN(f,l,m,x,y)<sp/>___ETS_ASSERT_LESS_THAN(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_LESS_THAN(f,l,m,x,y)<sp/>___TS_ASSERT_LESS_THAN(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_LESS_THAN(m,x,y)<sp/>_ETSM_ASSERT_LESS_THAN(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_LESS_THAN(m,x,y)<sp/>_TSM_ASSERT_LESS_THAN(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_LESS_THAN_EQUALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,m)<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CxxTest::doAssertLessThanEquals(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,m)<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y)<sp/>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y)<sp/>___TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,0)</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_LESS_THAN_EQUALS(x,y)<sp/>_ETS_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_LESS_THAN_EQUALS(x,y)<sp/>_TS_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,x,y)</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_LESS_THAN_EQUALS(f,l,m,x,y)<sp/>___ETS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_LESS_THAN_EQUALS(f,l,m,x,y)<sp/>___TS_ASSERT_LESS_THAN_EQUALS(f,l,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_LESS_THAN_EQUALS(m,x,y)<sp/>_ETSM_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_LESS_THAN_EQUALS(m,x,y)<sp/>_TSM_ASSERT_LESS_THAN_EQUALS(__FILE__,__LINE__,m,x,y)</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_PREDICATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_PREDICATE(f,l,p,x,m)<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CxxTest::doAssertPredicate(<sp/>(f),<sp/>(l),<sp/>#p,<sp/>p(),<sp/>#x,<sp/>(x),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_PREDICATE(f,l,p,x,m)<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_PREDICATE(f,l,p,x,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_PREDICATE(f,l,p,x)<sp/>___ETS_ASSERT_PREDICATE(f,l,p,x,0)</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_PREDICATE(f,l,p,x)<sp/>___TS_ASSERT_PREDICATE(f,l,p,x,0)</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_PREDICATE(p,x)<sp/>_ETS_ASSERT_PREDICATE(__FILE__,__LINE__,p,x)</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_PREDICATE(p,x)<sp/>_TS_ASSERT_PREDICATE(__FILE__,__LINE__,p,x)</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_PREDICATE(f,l,m,p,x)<sp/>___ETS_ASSERT_PREDICATE(f,l,p,x,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_PREDICATE(f,l,m,p,x)<sp/>___TS_ASSERT_PREDICATE(f,l,p,x,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_PREDICATE(m,p,x)<sp/>_ETSM_ASSERT_PREDICATE(__FILE__,__LINE__,m,p,x)</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_PREDICATE(m,p,x)<sp/>_TSM_ASSERT_PREDICATE(__FILE__,__LINE__,m,p,x)</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_RELATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_RELATION(f,l,r,x,y,m)<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CxxTest::doAssertRelation(<sp/>(f),<sp/>(l),<sp/>#r,<sp/>r(),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_RELATION(f,l,r,x,y,m)<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_RELATION(f,l,r,x,y,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_RELATION(f,l,r,x,y)<sp/>___ETS_ASSERT_RELATION(f,l,r,x,y,0)</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_RELATION(f,l,r,x,y)<sp/>___TS_ASSERT_RELATION(f,l,r,x,y,0)</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_RELATION(r,x,y)<sp/>_ETS_ASSERT_RELATION(__FILE__,__LINE__,r,x,y)</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_RELATION(r,x,y)<sp/>_TS_ASSERT_RELATION(__FILE__,__LINE__,r,x,y)</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_RELATION(f,l,m,r,x,y)<sp/>___ETS_ASSERT_RELATION(f,l,r,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_RELATION(f,l,m,r,x,y)<sp/>___TS_ASSERT_RELATION(f,l,r,x,y,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_RELATION(m,r,x,y)<sp/>_ETSM_ASSERT_RELATION(__FILE__,__LINE__,m,r,x,y)</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_RELATION(m,r,x,y)<sp/>_TSM_ASSERT_RELATION(__FILE__,__LINE__,m,r,x,y)</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_DELTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___ETS_ASSERT_DELTA(f,l,x,y,d,m)<sp/>CxxTest::doAssertDelta(<sp/>(f),<sp/>(l),<sp/>#x,<sp/>(x),<sp/>#y,<sp/>(y),<sp/>#d,<sp/>(d),<sp/>(m)<sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_DELTA(f,l,x,y,d,m)<sp/>{<sp/>_TS_TRY<sp/>{<sp/>___ETS_ASSERT_DELTA(f,l,x,y,d,m);<sp/>}<sp/>__TS_CATCH(f,l)<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETS_ASSERT_DELTA(f,l,x,y,d)<sp/>___ETS_ASSERT_DELTA(f,l,x,y,d,0)</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_DELTA(f,l,x,y,d)<sp/>___TS_ASSERT_DELTA(f,l,x,y,d,0)</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETS_ASSERT_DELTA(x,y,d)<sp/>_ETS_ASSERT_DELTA(__FILE__,__LINE__,x,y,d)</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_DELTA(x,y,d)<sp/>_TS_ASSERT_DELTA(__FILE__,__LINE__,x,y,d)</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_ETSM_ASSERT_DELTA(f,l,m,x,y,d)<sp/>___ETS_ASSERT_DELTA(f,l,x,y,d,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_DELTA(f,l,m,x,y,d)<sp/>___TS_ASSERT_DELTA(f,l,x,y,d,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ETSM_ASSERT_DELTA(m,x,y,d)<sp/>_ETSM_ASSERT_DELTA(__FILE__,__LINE__,m,x,y,d)</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_DELTA(m,x,y,d)<sp/>_TSM_ASSERT_DELTA(__FILE__,__LINE__,m,x,y,d)</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_THROWS(f,l,e,t,m)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>_ts_threw_expected<sp/>=<sp/>false,<sp/>_ts_threw_else<sp/>=<sp/>false;<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_TRY<sp/>{<sp/>e;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_TYPE(<sp/>(t),<sp/>{<sp/>_ts_threw_expected<sp/>=<sp/>true;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_ABORT(<sp/>{<sp/>throw;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_LAST_CATCH(<sp/>{<sp/>_ts_threw_else<sp/>=<sp/>true;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!_ts_threw_expected<sp/>)<sp/>{<sp/>CxxTest::doFailAssertThrows(<sp/>(f),<sp/>(l),<sp/>#e,<sp/>#t,<sp/>_ts_threw_else,<sp/>(m)<sp/>);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_THROWS(f,l,e,t)<sp/>___TS_ASSERT_THROWS(f,l,e,t,0)</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS(e,t)<sp/>_TS_ASSERT_THROWS(__FILE__,__LINE__,e,t)</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_THROWS(f,l,m,e,t)<sp/>___TS_ASSERT_THROWS(f,l,e,t,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS(m,e,t)<sp/>_TSM_ASSERT_THROWS(__FILE__,__LINE__,m,e,t)</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_THROWS_ASSERT(f,l,e,t,a,m)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>_ts_threw_expected<sp/>=<sp/>false,<sp/>_ts_threw_else<sp/>=<sp/>false;<sp/>\</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_TRY<sp/>{<sp/>e;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_TYPE(<sp/>(t),<sp/>{<sp/>a;<sp/>_ts_threw_expected<sp/>=<sp/>true;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_ABORT(<sp/>{<sp/>throw;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_LAST_CATCH(<sp/>{<sp/>_ts_threw_else<sp/>=<sp/>true;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!_ts_threw_expected<sp/>)<sp/>{<sp/>CxxTest::doFailAssertThrows(<sp/>(f),<sp/>(l),<sp/>#e,<sp/>#t,<sp/>_ts_threw_else,<sp/>(m)<sp/>);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_THROWS_ASSERT(f,l,e,t,a)<sp/>___TS_ASSERT_THROWS_ASSERT(f,l,e,t,a,0)</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_ASSERT(e,t,a)<sp/>_TS_ASSERT_THROWS_ASSERT(__FILE__,__LINE__,e,t,a)</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_THROWS_ASSERT(f,l,m,e,t,a)<sp/>___TS_ASSERT_THROWS_ASSERT(f,l,e,t,a,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,a)<sp/>_TSM_ASSERT_THROWS_ASSERT(__FILE__,__LINE__,m,e,t,a)</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_EQUALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_EQUALS(e,t,x,y)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_EQUALS(x,y))</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_EQUALS(m,e,t,x,y)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_EQUALS(m,x,y))</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_DIFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_DIFFERS(e,t,x,y)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_DIFFERS(x,y))</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_DIFFERS(m,e,t,x,y)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_DIFFERS(m,x,y))</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_DELTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_DELTA(e,t,x,y,d)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_DELTA(x,y,d))</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_DELTA(m,e,t,x,y,d)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_DELTA(m,x,y,d))</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_SAME_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_SAME_DATA(e,t,x,y,s)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_SAME_DATA(x,y,s))</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_SAME_DATA(m,e,t,x,y,s)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_SAME_DATA(m,x,y,s))</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_LESS_THAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_LESS_THAN(e,t,x,y)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_LESS_THAN(x,y))</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_LESS_THAN(m,e,t,x,y)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_LESS_THAN(m,x,y))</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_LESS_THAN_EQUALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_LESS_THAN_EQUALS(e,t,x,y)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_LESS_THAN_EQUALS(x,y))</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_LESS_THAN_EQUALS(m,e,t,x,y)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_LESS_THAN_EQUALS(m,x,y))</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_PREDICATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_PREDICATE(e,t,p,v)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_PREDICATE(p,v))</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_PREDICATE(m,e,t,p,v)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_PREDICATE(m,p,v))</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_RELATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_RELATION(e,t,r,x,y)<sp/>TS_ASSERT_THROWS_ASSERT(e,t,TS_ASSERT_RELATION(r,x,y))</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_RELATION(m,e,t,r,x,y)<sp/>TSM_ASSERT_THROWS_ASSERT(m,e,t,TSM_ASSERT_RELATION(m,r,x,y))</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_ANYTHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_THROWS_ANYTHING(f,l,e,m)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>_ts_threw<sp/>=<sp/>false;<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_TRY<sp/>{<sp/>e;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_LAST_CATCH(<sp/>{<sp/>_ts_threw<sp/>=<sp/>true;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!_ts_threw<sp/>)<sp/>{<sp/>CxxTest::doFailAssertThrows(<sp/>(f),<sp/>(l),<sp/>#e,<sp/>&quot;...&quot;,<sp/>false,<sp/>(m)<sp/>);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_THROWS_ANYTHING(f,l,e)<sp/>___TS_ASSERT_THROWS_ANYTHING(f,l,e,0)</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_ANYTHING(e)<sp/>_TS_ASSERT_THROWS_ANYTHING(__FILE__,<sp/>__LINE__,<sp/>e)</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_THROWS_ANYTHING(f,l,m,e)<sp/>___TS_ASSERT_THROWS_ANYTHING(f,l,e,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_ANYTHING(m,e)<sp/>_TSM_ASSERT_THROWS_ANYTHING(__FILE__,__LINE__,m,e)</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TS_ASSERT_THROWS_NOTHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>___TS_ASSERT_THROWS_NOTHING(f,l,e,m)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_TRY<sp/>{<sp/>e;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_CATCH_ABORT(<sp/>{<sp/>throw;<sp/>}<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TS_LAST_CATCH(<sp/>{<sp/>CxxTest::doFailAssertThrowsNot(<sp/>(f),<sp/>(l),<sp/>#e,<sp/>(m)<sp/>);<sp/>}<sp/>)<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TS_ASSERT_THROWS_NOTHING(f,l,e)<sp/>___TS_ASSERT_THROWS_NOTHING(f,l,e,0)</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TS_ASSERT_THROWS_NOTHING(e)<sp/>_TS_ASSERT_THROWS_NOTHING(__FILE__,__LINE__,e)</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_TSM_ASSERT_THROWS_NOTHING(f,l,m,e)<sp/>___TS_ASSERT_THROWS_NOTHING(f,l,e,TS_AS_STRING(m))</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TSM_ASSERT_THROWS_NOTHING(m,e)<sp/>_TSM_ASSERT_THROWS_NOTHING(__FILE__,__LINE__,m,e)</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>takes<sp/>care<sp/>of<sp/>&quot;signed<sp/>&lt;-&gt;<sp/>unsigned&quot;<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CXXTEST_COMPARISONS(CXXTEST_X,<sp/>CXXTEST_Y,<sp/>CXXTEST_T)<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>equals(<sp/>CXXTEST_X<sp/>x,<sp/>CXXTEST_Y<sp/>y<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)x)<sp/>==<sp/>((CXXTEST_T)y));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>equals(<sp/>CXXTEST_Y<sp/>y,<sp/>CXXTEST_X<sp/>x<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)y)<sp/>==<sp/>((CXXTEST_T)x));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>differs(<sp/>CXXTEST_X<sp/>x,<sp/>CXXTEST_Y<sp/>y<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)x)<sp/>!=<sp/>((CXXTEST_T)y));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>differs(<sp/>CXXTEST_Y<sp/>y,<sp/>CXXTEST_X<sp/>x<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)y)<sp/>!=<sp/>((CXXTEST_T)x));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>lessThan(<sp/>CXXTEST_X<sp/>x,<sp/>CXXTEST_Y<sp/>y<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)x)<sp/>&lt;<sp/>((CXXTEST_T)y));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>lessThan(<sp/>CXXTEST_Y<sp/>y,<sp/>CXXTEST_X<sp/>x<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)y)<sp/>&lt;<sp/>((CXXTEST_T)x));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>lessThanEquals(<sp/>CXXTEST_X<sp/>x,<sp/>CXXTEST_Y<sp/>y<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)x)<sp/>&lt;=<sp/>((CXXTEST_T)y));<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>bool<sp/>lessThanEquals(<sp/>CXXTEST_Y<sp/>y,<sp/>CXXTEST_X<sp/>x<sp/>)<sp/>{<sp/>return<sp/>(((CXXTEST_T)y)<sp/>&lt;=<sp/>((CXXTEST_T)x));<sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CXXTEST_INTEGRAL(CXXTEST_T)<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>CXXTEST_COMPARISONS(<sp/>signed<sp/>CXXTEST_T,<sp/>unsigned<sp/>CXXTEST_T,<sp/>unsigned<sp/>CXXTEST_T<sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_INTEGRAL(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_INTEGRAL(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_INTEGRAL(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_INTEGRAL(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_CXXTEST_LONGLONG</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_INTEGRAL(<sp/>_CXXTEST_LONGLONG<sp/>)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif<sp/>//<sp/>_CXXTEST_LONGLONG</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CXXTEST_SMALL_BIG(CXXTEST_SMALL,<sp/>CXXTEST_BIG)<sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>CXXTEST_COMPARISONS(<sp/>signed<sp/>CXXTEST_SMALL,<sp/>unsigned<sp/>CXXTEST_BIG,<sp/>unsigned<sp/>CXXTEST_BIG<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>CXXTEST_COMPARISONS(<sp/>signed<sp/>CXXTEST_BIG,<sp/>unsigned<sp/>CXXTEST_SMALL,<sp/>unsigned<sp/>CXXTEST_BIG<sp/>)</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_CXXTEST_LONGLONG</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/>_CXXTEST_LONGLONG<sp/>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/>_CXXTEST_LONGLONG<sp/>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>_CXXTEST_LONGLONG<sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>CXXTEST_SMALL_BIG(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>_CXXTEST_LONGLONG<sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif<sp/>//<sp/>_CXXTEST_LONGLONG</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__cxxtest__TestSuite_h__</highlight></codeline>
    </programlisting>
    <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/cxxtest/include/cxxtest/TestSuite.h"/>
  </compounddef>
</doxygen>
