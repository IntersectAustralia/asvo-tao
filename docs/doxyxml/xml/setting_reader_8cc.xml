<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="setting_reader_8cc" kind="file">
    <compoundname>settingReader.cc</compoundname>
    <includes refid="setting_reader_8hh" local="yes">settingReader.hh</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1365">
        <label>libhpc/libhpc.hh</label>
      </node>
      <node id="1368">
        <label>pugixml.hpp</label>
      </node>
      <node id="1369">
        <label>libhpc/containers/string.hh</label>
      </node>
      <node id="1366">
        <label>vector</label>
      </node>
      <node id="1364">
        <label>soci/soci.h</label>
      </node>
      <node id="1361">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/src/settingReader.cc</label>
        <link refid="settingReader.cc"/>
        <childnode refid="1362" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
      </node>
      <node id="1362">
        <label>settingReader.hh</label>
        <link refid="setting_reader_8hh_source"/>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1366" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
      </node>
      <node id="1367">
        <label>iostream</label>
      </node>
      <node id="1363">
        <label>soci/postgresql/soci-postgresql.h</label>
      </node>
      <node id="1370">
        <label>libhpc/options/dictionary.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetao">tao</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;settingReader.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tao</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>SettingReader::SettingReader(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>BasicSettingsFile,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ParamsFile)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadBasicXMLSettings(BasicSettingsFile);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadXMLParams(ParamsFile);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>SettingReader::~SettingReader()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SettingReader::ReadBasicXMLSettings(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>FileName)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_document<sp/>doc;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>File<sp/>and<sp/>validate<sp/>that<sp/>the<sp/>loading<sp/>was<sp/>done<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_parse_result<sp/>result=doc.load_file(FileName.c_str());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>Current<sp/>Setting<sp/>Struct<sp/>with<sp/>its<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.ServerIP=_GetNodeWithAssert(doc,</highlight><highlight class="stringliteral">&quot;/settings/Database/serverip&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.Port=_GetNodeWithAssert(doc,</highlight><highlight class="stringliteral">&quot;/settings/Database/port&quot;</highlight><highlight class="normal">).text().as_int();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.UserName=_GetNodeWithAssert(doc,</highlight><highlight class="stringliteral">&quot;/settings/Database/user&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.Password=_GetNodeWithAssert(doc,</highlight><highlight class="stringliteral">&quot;/settings/Database/password&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.TablePrefix=_GetNodeWithAssert(doc,</highlight><highlight class="stringliteral">&quot;/settings/Database/TreeTablePrefix&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//File<sp/>Loading<sp/>was<sp/>not<sp/>performed<sp/>Correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>the<sp/>basic<sp/>settings<sp/>file.<sp/>The<sp/>error<sp/>is<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;result.description()&lt;&lt;endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(result);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SettingReader::ReadXMLParams(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>FileName)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_parse_result<sp/>result=ParamsDoc.load_file(FileName.c_str());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>The<sp/>Current<sp/>UserName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.CurrentUserName=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/username&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.CurrentDB=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/database&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.WorkingFolder=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/OutputDir&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBasicSettings.LogFolder=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/LogDir&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//File<sp/>Loading<sp/>was<sp/>not<sp/>performed<sp/>Correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>the<sp/>basic<sp/>settings<sp/>file.<sp/>The<sp/>error<sp/>is<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;result.description()&lt;&lt;endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(result);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>xml_node<sp/>SettingReader::_GetNodeWithAssert(pugi::xml_document&amp;<sp/>doc,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>XPathQuery)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml_node<sp/>SENode=doc.select_single_node(XPathQuery.c_str()).node();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SENode.empty())</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>Node<sp/>Empty.<sp/>Node<sp/>Path=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;XPathQuery&lt;&lt;endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!SENode.empty());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SENode;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>LightConeParams<sp/>SettingReader::LoadLightCone()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LightConeParams<sp/>Params;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.ModuleVersion=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/module-version&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.Geometry=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/geometry&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.Simultation=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/simulation&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.GalaxyModel=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/galaxy-model&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.BoxRepetition=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/box-repetition&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.NumberofCones=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/num-cones&quot;</highlight><highlight class="normal">).text().as_int();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.redshiftmin=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/redshift-min&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.redshiftmax=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/redshift-max&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.ramin=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/ra-min&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.ramax=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/ra-max&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.decmin=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/dec-min&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.decmax=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/dec-max&quot;</highlight><highlight class="normal">).text().as_float();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml_node<sp/>OutputNodes=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/output-fields&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pugi::xml_node<sp/>OutputNode<sp/>=<sp/>OutputNodes.child(</highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal">);<sp/>OutputNode;<sp/>OutputNode<sp/>=<sp/>OutputNode.next_sibling(</highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputField<sp/>F;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F.FieldLabel=OutputNode.attribute(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">).value();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F.FieldDBName=OutputNode.child_value();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params.OutputFieldsList.push_back(F);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>rngseed=_GetNodeWithAssert(ParamsDoc,</highlight><highlight class="stringliteral">&quot;/tao/workflow/light-cone/rng-seed&quot;</highlight><highlight class="normal">).child_value();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Params;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/src/settingReader.cc"/>
  </compounddef>
</doxygen>
