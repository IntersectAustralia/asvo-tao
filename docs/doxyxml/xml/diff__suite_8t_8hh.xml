<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="diff__suite_8t_8hh" kind="file">
    <compoundname>diff_suite.t.hh</compoundname>
    <includes refid="_test_suite_8h" local="no">cxxtest/TestSuite.h</includes>
    <includes refid="_global_fixture_8h" local="no">cxxtest/GlobalFixture.h</includes>
    <includes local="no">libhpc/containers/vector.hh</includes>
    <includes local="yes">tao/modules/diff.hh</includes>
    <incdepgraph>
      <node id="1462">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/diff_suite.t.hh</label>
        <link refid="diff_suite.t.hh"/>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
      </node>
      <node id="1463">
        <label>cxxtest/TestSuite.h</label>
        <link refid="_test_suite_8h_source"/>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
      </node>
      <node id="1465">
        <label>cxxtest/TestTracker.h</label>
        <link refid="_test_tracker_8h_source"/>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1467">
        <label>cxxtest/Descriptions.h</label>
        <link refid="_descriptions_8h_source"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1466">
        <label>cxxtest/TestListener.h</label>
        <link refid="_test_listener_8h_source"/>
        <childnode refid="1467" relation="include">
        </childnode>
      </node>
      <node id="1470">
        <label>cxxtest/ValueTraits.h</label>
        <link refid="_value_traits_8h_source"/>
        <childnode refid="1464" relation="include">
        </childnode>
      </node>
      <node id="1471">
        <label>cxxtest/GlobalFixture.h</label>
        <link refid="_global_fixture_8h_source"/>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>cxxtest/DummyDescriptions.h</label>
        <link refid="_dummy_descriptions_8h_source"/>
        <childnode refid="1467" relation="include">
        </childnode>
      </node>
      <node id="1464">
        <label>cxxtest/Flags.h</label>
        <link refid="_flags_8h_source"/>
      </node>
      <node id="1468">
        <label>cxxtest/LinkedList.h</label>
        <link refid="_linked_list_8h_source"/>
        <childnode refid="1464" relation="include">
        </childnode>
      </node>
      <node id="1472">
        <label>libhpc/containers/vector.hh</label>
      </node>
      <node id="1473">
        <label>tao/modules/diff.hh</label>
      </node>
    </incdepgraph>
    <innerclass refid="classdiff__suite" prot="public">diff_suite</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cxxtest/TestSuite.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/GlobalFixture.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhpc/containers/vector.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tao/modules/diff.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">hpc;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">tao;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classdiff__suite" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdiff__suite" kindref="compound">diff_suite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_cxx_test_1_1_test_suite" kindref="compound">CxxTest::TestSuite</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_empty()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func,<sp/>diff;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_one()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func(<sp/>1<sp/>),<sp/>diff(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func[0]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_EQUALS(<sp/>func[0],<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_EQUALS(<sp/>diff[0],<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_flat()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func(<sp/>10<sp/>),<sp/>diff(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(<sp/>func.begin(),<sp/>func.end(),<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>:<sp/>func<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_EQUALS(<sp/>val,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>:<sp/>diff<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>val,<sp/>0,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_linear()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func(<sp/>10<sp/>),<sp/>diff(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(<sp/>func.begin(),<sp/>func.end(),<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>10;<sp/>++ii<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>func[ii],<sp/>3<sp/>+<sp/>ii,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>:<sp/>diff<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>val,<sp/>1,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_linear_step_size()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func(<sp/>10<sp/>),<sp/>diff(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(<sp/>func.begin(),<sp/>func.end(),<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>10;<sp/>++ii<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>func[ii],<sp/>3<sp/>+<sp/>ii,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>:<sp/>diff<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>val,<sp/>0.5,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_quadratic()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>func(<sp/>10<sp/>),<sp/>diff(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>10;<sp/>++ii<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>func[ii]<sp/>=<sp/>(ii<sp/>-<sp/>5)*(ii<sp/>-<sp/>5);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>differentiate(<sp/>func.begin(),<sp/>func.end(),<sp/>diff.begin(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>10;<sp/>++ii<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>func[ii],<sp/>(ii<sp/>-<sp/>5)*(ii<sp/>-<sp/>5),<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>diff[0],<sp/>-9,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>1;<sp/>ii<sp/>&lt;<sp/>9;<sp/>++ii<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>diff[ii],<sp/>2*(ii<sp/>-<sp/>5),<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>diff[9],<sp/>7,<sp/>1e-4<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/diff_suite.t.hh"/>
  </compounddef>
</doxygen>
