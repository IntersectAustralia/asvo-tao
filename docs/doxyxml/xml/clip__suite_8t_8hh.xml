<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="clip__suite_8t_8hh" kind="file">
    <compoundname>clip_suite.t.hh</compoundname>
    <includes refid="_test_suite_8h" local="no">cxxtest/TestSuite.h</includes>
    <includes refid="_global_fixture_8h" local="no">cxxtest/GlobalFixture.h</includes>
    <includes local="yes">tao/modules/clip.hh</includes>
    <incdepgraph>
      <node id="1445">
        <label>cxxtest/TestSuite.h</label>
        <link refid="_test_suite_8h_source"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
      </node>
      <node id="1447">
        <label>cxxtest/TestTracker.h</label>
        <link refid="_test_tracker_8h_source"/>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
      </node>
      <node id="1449">
        <label>cxxtest/Descriptions.h</label>
        <link refid="_descriptions_8h_source"/>
        <childnode refid="1450" relation="include">
        </childnode>
      </node>
      <node id="1448">
        <label>cxxtest/TestListener.h</label>
        <link refid="_test_listener_8h_source"/>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1452">
        <label>cxxtest/ValueTraits.h</label>
        <link refid="_value_traits_8h_source"/>
        <childnode refid="1446" relation="include">
        </childnode>
      </node>
      <node id="1453">
        <label>cxxtest/GlobalFixture.h</label>
        <link refid="_global_fixture_8h_source"/>
        <childnode refid="1450" relation="include">
        </childnode>
      </node>
      <node id="1451">
        <label>cxxtest/DummyDescriptions.h</label>
        <link refid="_dummy_descriptions_8h_source"/>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1454">
        <label>tao/modules/clip.hh</label>
      </node>
      <node id="1446">
        <label>cxxtest/Flags.h</label>
        <link refid="_flags_8h_source"/>
      </node>
      <node id="1450">
        <label>cxxtest/LinkedList.h</label>
        <link refid="_linked_list_8h_source"/>
        <childnode refid="1446" relation="include">
        </childnode>
      </node>
      <node id="1444">
        <label>/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/clip_suite.t.hh</label>
        <link refid="clip_suite.t.hh"/>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classclip__suite" prot="public">clip_suite</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cxxtest/TestSuite.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxtest/GlobalFixture.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tao/modules/clip.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">hpc;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">tao;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classclip__suite" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclip__suite" kindref="compound">clip_suite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_cxx_test_1_1_test_suite" kindref="compound">CxxTest::TestSuite</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_inner_product()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;int,3&gt;<sp/>vec1(<sp/>1,<sp/>2,<sp/>3<sp/>),<sp/>vec2(<sp/>2,<sp/>3,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_EQUALS(<sp/>inner_product(<sp/>vec1.begin(),<sp/>vec1.end(),<sp/>vec2.begin()<sp/>),<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_inside()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>vec1(<sp/>2,<sp/>1,<sp/>1<sp/>),<sp/>vec2(<sp/>0.5,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,4&gt;<sp/>hsp(<sp/>1.0/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>inside(<sp/>vec1.begin(),<sp/>vec1.end(),<sp/>hsp.begin()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>!inside(<sp/>vec2.begin(),<sp/>vec2.end(),<sp/>hsp.begin()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_half_space_eval()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>vec(<sp/>2,<sp/>3,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,4&gt;<sp/>hsp(<sp/>1.0/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>half_space_eval(<sp/>vec.begin(),<sp/>vec.end(),<sp/>hsp.begin()<sp/>),<sp/>3.196,<sp/>1e-3<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_line_half_space_intersection()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>vec1(<sp/>-1,<sp/>-1,<sp/>-1<sp/>),<sp/>vec2(<sp/>1,<sp/>1,<sp/>1<sp/>),<sp/>vec3;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,4&gt;<sp/>hsp(<sp/>1.0/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line_half_space_intersection(<sp/>vec1.begin(),<sp/>vec1.end(),<sp/>vec2.begin(),<sp/>vec2.end(),<sp/>hsp.begin(),<sp/>vec3.begin()<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>:<sp/>vec3<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>x,<sp/>1.1547,<sp/>1e-3<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_box_half_space_overlap()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>min(<sp/>-1,<sp/>-1,<sp/>-1<sp/>),<sp/>max(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,4&gt;<sp/>hsp(<sp/>1.0/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>box_half_space_overlap(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>!res<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_overlap(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_overlap(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_overlap(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_box_half_space_intersection()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>min(<sp/>-1,<sp/>-1,<sp/>-1<sp/>),<sp/>max(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,4&gt;<sp/>hsp(<sp/>1.0/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>1/sqrt(<sp/>3.0<sp/>),<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>box_half_space_intersection(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>!res<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_intersection(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_intersection(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>!res<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hsp[3]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>box_half_space_intersection(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>min.begin(),<sp/>min.end(),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>max.begin(),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hsp.begin()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_polygon_area()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>shape;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>0.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>2.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>2.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>0.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>polygon_area(<sp/>shape.begin(),<sp/>shape.end()<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TS_ASSERT_DELTA(<sp/>area,<sp/>4.0,<sp/>1e-6<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_clip_edge()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>shape,<sp/>result;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>left_edge(<sp/>1.0,<sp/>0.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>-1.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>1.0,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>-1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip_edge(</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>left_edge.begin(),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>shape.begin(),<sp/>shape.end(),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::insert_iterator&lt;list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>&gt;(<sp/>result,<sp/>result.begin()<sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_clip_edge_final_edge()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>shape,<sp/>result;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array&lt;double,3&gt;<sp/>left_edge(<sp/>1.0,<sp/>0.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>1.0,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>-1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape.emplace_back(<sp/>-1.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip_edge(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>left_edge.begin(),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>shape.begin(),<sp/>shape.end(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::insert_iterator&lt;list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>&gt;(<sp/>result,<sp/>result.begin()<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_clip_polygon()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>poly,<sp/>result;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>1.0,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>-1.0,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>-1.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip_polygon(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>1.0,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>poly.begin(),<sp/>poly.end(),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::insert_iterator&lt;list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>&gt;(<sp/>result,<sp/>result.begin()<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_clip_polygon_full()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>poly,<sp/>result;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>-10.0,<sp/>-10.0<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>10.0,<sp/>-10.0<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>10.0,<sp/>10.0<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poly.emplace_back(<sp/>-10.0,<sp/>10.0<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip_polygon(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>1.0,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>poly.begin(),<sp/>poly.end(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::insert_iterator&lt;list&lt;array&lt;double,2&gt;<sp/>&gt;<sp/>&gt;(<sp/>result,<sp/>result.begin()<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/modules/tests/clip_suite.t.hh"/>
  </compounddef>
</doxygen>
