<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="cxxtest_8py" kind="file">
    <compoundname>cxxtest.py</compoundname>
    <innerclass refid="classcxxtest_1_1_tool_cxx_test_warning" prot="public">cxxtest::ToolCxxTestWarning</innerclass>
    <innernamespace refid="namespacecxxtest">cxxtest</innernamespace>
    <innernamespace refid="namespace_s_cons_1_1_script">SCons::Script</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>coding=UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==<sp/>Preamble<sp/>==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Authors<sp/>of<sp/>this<sp/>script<sp/>are<sp/>in<sp/>the<sp/>Authors<sp/>file<sp/>in<sp/>the<sp/>same<sp/>directory<sp/>as<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>scrip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>please<sp/>send<sp/>bugreports/praise/comments/criticism<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>gasper.azman<sp/>at<sp/>gmail.com<sp/>or<sp/>the<sp/>cxxtest<sp/>mailing<sp/>list<sp/>(dev<sp/>at<sp/>cxxtest.tigris.org)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>maintained<sp/>as<sp/>a<sp/>part<sp/>of<sp/>the<sp/>CxxTest<sp/>test<sp/>suite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==<sp/>About<sp/>==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>builder<sp/>correctly<sp/>tracks<sp/>dependencies<sp/>and<sp/>supports<sp/>just<sp/>about<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>configuration<sp/>option<sp/>for<sp/>CxxTest<sp/>that<sp/>I<sp/>can<sp/>think<sp/>of.<sp/>It<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>defines<sp/>a<sp/>target<sp/>&quot;check&quot;<sp/>(configurable),<sp/>so<sp/>all<sp/>tests<sp/>can<sp/>be<sp/>run<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>%<sp/>scons<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>will<sp/>first<sp/>compile<sp/>and<sp/>then<sp/>run<sp/>the<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>default<sp/>configuration<sp/>assumes<sp/>that<sp/>cxxtest<sp/>is<sp/>located<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>base<sp/>source<sp/>directory<sp/>(where<sp/>SConstruct<sp/>is),<sp/>that<sp/>the<sp/>cxxtestgen<sp/>is<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>cxxtest/python/scripts/cxxtestgen<sp/>and<sp/>headers<sp/>are<sp/>in<sp/>cxxtest/cxxtest/.<sp/>The<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>include<sp/>path<sp/>is<sp/>automatically<sp/>added<sp/>to<sp/>CPPPATH.<sp/>It,<sp/>however,<sp/>can<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>recognise<sp/>that<sp/>cxxtest<sp/>is<sp/>installed<sp/>system-wide<sp/>(based<sp/>on<sp/>redhat&apos;s<sp/>RPM).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>For<sp/>a<sp/>list<sp/>of<sp/>environment<sp/>variables<sp/>and<sp/>their<sp/>defaults,<sp/>see<sp/>the<sp/>generate()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>should<sp/>be<sp/>in<sp/>a<sp/>file<sp/>called<sp/>cxxtest.py<sp/>somewhere<sp/>in<sp/>the<sp/>scons<sp/>toolpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(default:<sp/>#/site_scons/site_tools/)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==<sp/>Usage:<sp/>==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>For<sp/>configuration<sp/>options,<sp/>check<sp/>the<sp/>comment<sp/>of<sp/>the<sp/>generate()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>builder<sp/>has<sp/>a<sp/>variety<sp/>of<sp/>different<sp/>possible<sp/>usages,<sp/>so<sp/>bear<sp/>with<sp/>me.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>env.CxxTest(&apos;target&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>simplest<sp/>of<sp/>them<sp/>all,<sp/>it<sp/>models<sp/>the<sp/>Program<sp/>call.<sp/>This<sp/>sees<sp/>if<sp/>target.t.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>around<sp/>and<sp/>passes<sp/>it<sp/>through<sp/>the<sp/>cxxtestgen<sp/>and<sp/>compiles<sp/>it.<sp/>Might<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">#<sp/>work<sp/>on<sp/>unix<sp/>though,<sp/>because<sp/>target<sp/>can&apos;t<sp/>have<sp/>a<sp/>suffix<sp/>right<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>env.CxxTest([&apos;target.t.h&apos;])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>compiles<sp/>target.t.h<sp/>as<sp/>in<sp/>the<sp/>previous<sp/>example,<sp/>but<sp/>now<sp/>sees<sp/>that<sp/>it<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">#<sp/>source<sp/>file.<sp/>It<sp/>need<sp/>not<sp/>have<sp/>the<sp/>same<sp/>suffix<sp/>as<sp/>the<sp/>env[&apos;CXXTEST_SUFFIX&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/>variable<sp/>dictates.<sp/>The<sp/>only<sp/>file<sp/>provided<sp/>is<sp/>taken<sp/>as<sp/>the<sp/>test<sp/>source<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">#<sp/>env.CxxTest([&apos;test1.t.h&apos;,&apos;test1_lib.cpp&apos;,&apos;test1_lib2.cpp&apos;,&apos;test2.t.h&apos;,...])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>also<sp/>specify<sp/>multiple<sp/>source<sp/>files.<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>1st<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">#<sp/>ends<sp/>with<sp/>CXXTEST_SUFFIX<sp/>(default:<sp/>.t.h)<sp/>will<sp/>be<sp/>taken<sp/>as<sp/>the<sp/>default<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">#<sp/>file.<sp/>All<sp/>others<sp/>will<sp/>be<sp/>run<sp/>with<sp/>the<sp/>--part<sp/>switch<sp/>and<sp/>linked<sp/>in.<sp/>All<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*not*<sp/>having<sp/>the<sp/>right<sp/>suffix<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>Program<sp/>call<sp/>verbatim.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#<sp/>In<sp/>the<sp/>last<sp/>two<sp/>cases,<sp/>you<sp/>may<sp/>also<sp/>specify<sp/>the<sp/>desired<sp/>name<sp/>of<sp/>the<sp/>test<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>1st<sp/>argument<sp/>to<sp/>the<sp/>function.<sp/>This<sp/>will<sp/>result<sp/>in<sp/>the<sp/>end<sp/>executable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#<sp/>called<sp/>that.<sp/>Normal<sp/>Program<sp/>builder<sp/>rules<sp/>apply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_s_cons_1_1_script" kindref="compound">SCons.Script</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>SCons.Builder<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Builder</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>warning<sp/>class<sp/>to<sp/>notify<sp/>users<sp/>of<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classcxxtest_1_1_tool_cxx_test_warning" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxxtest_1_1_tool_cxx_test_warning" kindref="compound">ToolCxxTestWarning</ref>(SCons.Warnings.Warning):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">SCons.Warnings.enableWarningClass(ToolCxxTestWarning)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">accumulateEnvVar(dicts,<sp/>name,<sp/>default<sp/>=<sp/>[]):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Accumulates<sp/>the<sp/>values<sp/>under<sp/>key<sp/>&apos;name&apos;<sp/>from<sp/>the<sp/>list<sp/>of<sp/>dictionaries<sp/>dict.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>default<sp/>value<sp/>is<sp/>appended<sp/>to<sp/>the<sp/>end<sp/>list<sp/>if<sp/>&apos;name&apos;<sp/>does<sp/>not<sp/>exist<sp/>in</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>dict.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>final<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dicts:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final<sp/>+=<sp/>Split(d.get(name,<sp/>default))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>final</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">multiget(dictlist,<sp/>key,<sp/>default<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Takes<sp/>a<sp/>list<sp/>of<sp/>dictionaries<sp/>as<sp/>its<sp/>1st<sp/>argument.<sp/>Checks<sp/>if<sp/>the<sp/>key<sp/>exists</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>each<sp/>one<sp/>and<sp/>returns<sp/>the<sp/>1st<sp/>one<sp/>it<sp/>finds.<sp/>If<sp/>the<sp/>key<sp/>is<sp/>found<sp/>in<sp/>no</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dictionaries,<sp/>the<sp/>default<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictlist:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dict.has_key(key):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict[key]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">envget(env,<sp/>key,<sp/>default=None):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Look<sp/>in<sp/>the<sp/>env,<sp/>then<sp/>in<sp/>os.environ.<sp/>Otherwise<sp/>same<sp/>as<sp/>multiget.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiget([env,<sp/>os.environ],<sp/>key,<sp/>default)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">make_command(env,<sp/>bin_path,<sp/>num_ranks,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_ranks<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>1):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin_path</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpiexec<sp/>=<sp/>multiget((env,),<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_MPIEXEC&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;mpiexec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np<sp/>=<sp/>multiget((env,),<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_MPI_NP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-np&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;%s<sp/>%s<sp/>%d<sp/>%s&apos;</highlight><highlight class="normal">%(mpiexec,<sp/>np,<sp/>num_ranks,<sp/>bin_path)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">UnitTest(env,<sp/>target,<sp/>source<sp/>=<sp/>[],<sp/>ranks=[],<sp/>**kwargs):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Prepares<sp/>the<sp/>Program<sp/>call<sp/>arguments,<sp/>calls<sp/>Program<sp/>and<sp/>adds<sp/>the<sp/>result<sp/>to</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>check<sp/>target.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>the<sp/>c<sp/>and<sp/>cxx<sp/>flags<sp/>to<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ccflags<sp/><sp/><sp/>=<sp/>Split(<sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],<sp/></highlight><highlight class="stringliteral">&apos;CCFLAGS&apos;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxflags<sp/><sp/>=<sp/>Split(<sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],<sp/></highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>the<sp/>removal<sp/>c<sp/>and<sp/>cxx<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxremove<sp/>=<sp/>set(<sp/>Split(<sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],</highlight><highlight class="stringliteral">&apos;CXXTEST_CXXFLAGS_REMOVE&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ccremove<sp/><sp/>=<sp/>set(<sp/>Split(<sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],</highlight><highlight class="stringliteral">&apos;CXXTEST_CCFLAGS_REMOVE&apos;</highlight><highlight class="normal"><sp/>)))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>remove<sp/>the<sp/>required<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ccflags<sp/><sp/><sp/>=<sp/>[item<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccflags<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccremove]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxflags<sp/><sp/>=<sp/>[item<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cxxflags<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cxxremove]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fill<sp/>the<sp/>flags<sp/>into<sp/>kwargs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&quot;CXXFLAGS&quot;</highlight><highlight class="normal">]<sp/>=<sp/>cxxflags</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&quot;CCFLAGS&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>ccflags</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>test<sp/>=<sp/>env.Program(target,<sp/>source<sp/>=<sp/>source,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>the<sp/>ranks<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ranks:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranks<sp/>=<sp/>[1]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>num_ranks<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ranks:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>make_command(env,<sp/>test[0].abspath,<sp/>num_ranks,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_SKIP_ERRORS&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runner<sp/>=<sp/>env.Action(cmd,<sp/>exitstatfunc=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runner<sp/>=<sp/>env.Action(cmd)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.Alias(env[</highlight><highlight class="stringliteral">&apos;CXXTEST_TARGET&apos;</highlight><highlight class="normal">],<sp/>test,<sp/>runner)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>env.AlwaysBuild(env[</highlight><highlight class="stringliteral">&apos;CXXTEST_TARGET&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">isValidScriptPath(cxxtestgen):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;check<sp/>keyword<sp/>arg<sp/>or<sp/>environment<sp/>variable<sp/>locating<sp/>cxxtestgen<sp/>script&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxxtestgen<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.path.exists(cxxtestgen):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCons.Warnings.warn(ToolCxxTestWarning,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CXXTEST<sp/>environment<sp/>variable<sp/>specified!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">defaultCxxTestGenLocation(env):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.join(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envget(env,<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_CXXTESTGEN_DEFAULT_LOCATION&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envget(env,<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_CXXTESTGEN_SCRIPT_NAME&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">findCxxTestGen(env):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;locate<sp/>the<sp/>cxxtestgen<sp/>script<sp/>by<sp/>checking<sp/>environment,<sp/>path<sp/>and<sp/>project&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>the<sp/>SCons<sp/>environment...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Then,<sp/>check<sp/>the<sp/>OS<sp/>environment...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxtest<sp/>=<sp/>envget(env,<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>for<sp/>common<sp/>passing<sp/>errors<sp/>and<sp/>provide<sp/>diagnostics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(cxxtest,<sp/>(list,<sp/>tuple,<sp/>dict)):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCons.Warnings.warn(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToolCxxTestWarning,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>CXXTEST<sp/>variable<sp/>was<sp/>specified<sp/>as<sp/>a<sp/>list.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>This<sp/>is<sp/>not<sp/>supported.<sp/>Please<sp/>pass<sp/>a<sp/>string.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxxtest:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#try<sp/>getting<sp/>the<sp/>absolute<sp/>path<sp/>of<sp/>the<sp/>file<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Required<sp/>to<sp/>expand<sp/>&apos;#&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxxtest<sp/>=<sp/>env.File(cxxtest).abspath</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#maybe<sp/>only<sp/>the<sp/>directory<sp/>was<sp/>specified?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxxtest<sp/>=<sp/>env.File(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(cxxtest,<sp/>defaultCxxTestGenLocation(env)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)).abspath</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>user<sp/>specified<sp/>the<sp/>location<sp/>in<sp/>the<sp/>environment,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>it<sp/>was<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isValidScriptPath(cxxtest):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.realpath(cxxtest)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>valid<sp/>environment<sp/>variable<sp/>found,<sp/>so...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Next,<sp/>check<sp/>the<sp/>path...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Next,<sp/>check<sp/>the<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>check_path<sp/>=<sp/>os.path.join(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envget(env,<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_INSTALL_DIR&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envget(env,<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_CXXTESTGEN_DEFAULT_LOCATION&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxtest<sp/>=<sp/>(env.WhereIs(</highlight><highlight class="stringliteral">&apos;cxxtestgen&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.WhereIs(</highlight><highlight class="stringliteral">&apos;cxxtestgen&apos;</highlight><highlight class="normal">,<sp/>path=[Dir(check_path).abspath]))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxxtest:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cxxtest</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we<sp/>weren&apos;t<sp/>able<sp/>to<sp/>locate<sp/>the<sp/>cxxtestgen<sp/>script,<sp/>complain...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCons.Warnings.warn(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToolCxxTestWarning,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>locate<sp/>cxxtestgen<sp/>in<sp/>environment,<sp/>path<sp/>or&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>project!\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>the<sp/>CXXTEST<sp/>variable<sp/>to<sp/>the<sp/>path<sp/>of<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>cxxtestgen<sp/>script&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">findCxxTestHeaders(env):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>searchfile<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;TestSuite.h&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxtestgen_pathlen<sp/>=<sp/>len(defaultCxxTestGenLocation(env))</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>default_path<sp/>=<sp/>Dir(envget(env,</highlight><highlight class="stringliteral">&apos;CXXTEST_INSTALL_DIR&apos;</highlight><highlight class="normal">)).abspath</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>alt_path<sp/>=<sp/>Dir(File(env[</highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">]).abspath[:-cxxtestgen_pathlen]).abspath</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>searchpaths<sp/>=<sp/>[default_path,<sp/>alt_path]</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>searchpaths:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(os.path.join(p,<sp/></highlight><highlight class="stringliteral">&apos;cxxtest&apos;</highlight><highlight class="normal">,<sp/>searchfile)):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">generate(env,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Keyword<sp/>arguments<sp/>(all<sp/>can<sp/>be<sp/>set<sp/>via<sp/>environment<sp/>variables<sp/>as<sp/>well):</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>path<sp/>to<sp/>the<sp/>cxxtestgen<sp/>script.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default:<sp/>searches<sp/>SCons<sp/>environment,<sp/>OS<sp/>environment,</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>and<sp/>project<sp/>in<sp/>that<sp/>order.<sp/>Instead<sp/>of<sp/>setting<sp/>this,</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>you<sp/>can<sp/>also<sp/>set<sp/>CXXTEST_INSTALL_DIR</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_RUNNER<sp/><sp/>-<sp/>the<sp/>runner<sp/>to<sp/>use.<sp/><sp/>Default:<sp/>ErrorPrinter</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_OPTS<sp/><sp/><sp/><sp/>-<sp/>other<sp/>options<sp/>to<sp/>pass<sp/>to<sp/>cxxtest.<sp/><sp/>Default:<sp/>&apos;&apos;</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_SUFFIX<sp/><sp/>-<sp/>the<sp/>suffix<sp/>of<sp/>the<sp/>test<sp/>files.<sp/><sp/>Default:<sp/>&apos;.t.h&apos;</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_TARGET<sp/><sp/>-<sp/>the<sp/>target<sp/>to<sp/>append<sp/>the<sp/>tests<sp/>to.<sp/><sp/>Default:<sp/>check</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_CXXFLAGS_REMOVE<sp/>-<sp/>the<sp/>flags<sp/>that<sp/>cxxtests<sp/>can&apos;t<sp/>compile<sp/>with,</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>give<sp/>lots<sp/>of<sp/>warnings.<sp/>Will<sp/>be<sp/>stripped.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default:<sp/>-pedantic<sp/>-Weffc++</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_CCFLAGS_REMOVE<sp/>-<sp/>the<sp/>same<sp/>thing<sp/>as<sp/>CXXTEST_CXXFLAGS_REMOVE,<sp/>just<sp/>for</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCFLAGS.<sp/>Default:<sp/>same<sp/>as<sp/>CXXFLAGS.</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_PYTHON<sp/><sp/>-<sp/>the<sp/>path<sp/>to<sp/>the<sp/>python<sp/>binary.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default:<sp/>searches<sp/>path<sp/>for<sp/>python</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_SKIP_ERRORS<sp/>-<sp/>set<sp/>to<sp/>True<sp/>to<sp/>continue<sp/>running<sp/>the<sp/>next<sp/>test<sp/>if<sp/>one</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>fails.<sp/>Default:<sp/>False</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_CPPPATH<sp/>-<sp/>If<sp/>you<sp/>do<sp/>not<sp/>want<sp/>to<sp/>clutter<sp/>your<sp/>global<sp/>CPPPATH<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CxxTest<sp/>header<sp/>files<sp/>and<sp/>other<sp/>stuff<sp/>you<sp/>only<sp/>need<sp/>for</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>your<sp/>tests,<sp/>this<sp/>is<sp/>the<sp/>variable<sp/>to<sp/>set.<sp/>Behaves<sp/>as</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPPATH<sp/>does.</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>CXXTEST_INSTALL_DIR<sp/>-<sp/>this<sp/>is<sp/>where<sp/>you<sp/>tell<sp/>the<sp/>builder<sp/>where<sp/>CxxTest<sp/>is</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>installed.<sp/>The<sp/>install<sp/>directory<sp/>has<sp/>cxxtest,</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>python,<sp/>docs<sp/>and<sp/>other<sp/>subdirectories.</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>...<sp/>and<sp/>all<sp/>others<sp/>that<sp/>Program()<sp/>accepts,<sp/>like<sp/>CPPPATH<sp/>etc.</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>CxxTest<sp/>tool...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expected<sp/>behaviour:<sp/>keyword<sp/>arguments<sp/>override<sp/>environment<sp/>variables;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>environment<sp/>variables<sp/>override<sp/>default<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_RUNNER<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;ErrorPrinter&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_OPTS<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_SUFFIX<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.t.h&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_TARGET<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;check&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_CPPPATH<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_PYTHON<sp/><sp/>=<sp/>env.WhereIs(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_SKIP_ERRORS<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_CXXFLAGS_REMOVE<sp/>=</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;-pedantic&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Weffc++&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-pedantic-errors&apos;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_CCFLAGS_REMOVE<sp/><sp/>=</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&apos;-pedantic&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Weffc++&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-pedantic-errors&apos;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_INSTALL_DIR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;#/cxxtest/&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>one&apos;s<sp/>not<sp/>for<sp/>public<sp/>use<sp/>-<sp/>it<sp/>documents<sp/>where<sp/>the<sp/>cxxtestgen<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>is<sp/>located<sp/>in<sp/>the<sp/>CxxTest<sp/>tree<sp/>normally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_CXXTESTGEN_DEFAULT_LOCATION<sp/>=</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;scripts&apos;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>cxxtestgen<sp/>script<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>env.SetDefault(<sp/>CXXTEST_CXXTESTGEN_SCRIPT_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;cxxtestgen&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Here&apos;s<sp/>where<sp/>keyword<sp/>arguments<sp/>are<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>apply(env.Replace,<sp/>(),<sp/>kwargs)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#If<sp/>the<sp/>user<sp/>specified<sp/>the<sp/>path<sp/>to<sp/>CXXTEST,<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#otherwise,<sp/>search<sp/>for<sp/>and<sp/>set<sp/>the<sp/>default<sp/>toolpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>kwargs.has_key(</highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isValidScriptPath(kwargs[</highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">])<sp/>):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&quot;CXXTEST&quot;</highlight><highlight class="normal">]<sp/>=<sp/>findCxxTestGen(env)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>and<sp/>add<sp/>the<sp/>CxxTest<sp/>headers<sp/>to<sp/>the<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_path<sp/>=<sp/>findCxxTestHeaders(env)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hdr_path:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.AppendUnique(<sp/>CXXTEST_CPPPATH<sp/>=<sp/>[hdr_path]<sp/><sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>cxxtest<sp/>=<sp/>env[</highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxxtest:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>Builder<sp/>(only<sp/>if<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>cxxtestgen!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxxtest_builder<sp/>=<sp/>Builder(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[</highlight><highlight class="stringliteral">&quot;$CXXTEST_PYTHON&quot;</highlight><highlight class="normal">,cxxtest,</highlight><highlight class="stringliteral">&quot;--runner=$CXXTEST_RUNNER&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$CXXTEST_OPTS&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$CXXTEST_ROOT_PART&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-o&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$TARGET&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$SOURCE&quot;</highlight><highlight class="normal">]],</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.cpp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;$CXXTEST_SUFFIX&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxxtest_builder<sp/>=<sp/>(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>*a:<sp/>sys.stderr.write(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>CXXTESTGEN<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_cxx_test" kindref="compound">CxxTest</ref>(env,<sp/>target,<sp/>source<sp/>=<sp/>None,<sp/>ranks=[],<sp/>**kwargs):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Usage:</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>is<sp/>modelled<sp/>to<sp/>be<sp/>called<sp/>as<sp/>the<sp/>Program()<sp/>call<sp/>is:</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.CxxTest(&apos;target_name&apos;)<sp/>will<sp/>build<sp/>the<sp/>test<sp/>from<sp/>the<sp/>source</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_name<sp/>+<sp/>env[&apos;CXXTEST_SUFFIX&apos;],</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.CxxTest(&apos;target_name&apos;,<sp/>source<sp/>=<sp/>&apos;test_src.t.h&apos;)<sp/>will<sp/>build<sp/>the<sp/>test</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>test_src.t.h<sp/>source,</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.CxxTest(&apos;target_name,<sp/>source<sp/>=<sp/>[&apos;test_src.t.h&apos;,<sp/>other_srcs]</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builds<sp/>the<sp/>test<sp/>from<sp/>source[0]<sp/>and<sp/>links<sp/>in<sp/>other<sp/>files<sp/>mentioned<sp/>in</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources,</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>may<sp/>also<sp/>add<sp/>additional<sp/>arguments<sp/>to<sp/>the<sp/>function.<sp/>In<sp/>that<sp/>case,<sp/>they</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>actual<sp/>Program<sp/>builder<sp/>call<sp/>unmodified.<sp/>Convenient</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>passing<sp/>different<sp/>CPPPATHs<sp/>and<sp/>the<sp/>sort.<sp/>This<sp/>function<sp/>also<sp/>appends</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CXXTEST_CPPPATH<sp/>to<sp/>CPPPATH.<sp/>It<sp/>does<sp/>not<sp/>clutter<sp/>the<sp/>environment&apos;s<sp/>CPPPATH.</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suffix<sp/>=<sp/>multiget([kwargs,<sp/>env,<sp/>os.environ],<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_SUFFIX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>[t<sp/>+<sp/>suffix<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target]</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources<sp/>=<sp/>Flatten(Split(source))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headers<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkins<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sources:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>file<sp/>object<sp/>or<sp/>a<sp/>string<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>l.abspath</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>l</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s.endswith(multiget([kwargs,<sp/>env,<sp/>os.environ],<sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_SUFFIX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headers.append(l)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkins.append(l)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(headers)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(linkins)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>1st<sp/>source<sp/>specified<sp/>is<sp/>the<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps.append(env.CxxTestCpp(linkins.pop(0),<sp/>**kwargs))</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps.append(env.CxxTestCpp(headers.pop(0),<sp/>**kwargs))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps.extend(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[env.CxxTestCpp(header,<sp/>CXXTEST_RUNNER<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CXXTEST_ROOT_PART<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--part&apos;</highlight><highlight class="normal">,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>header<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>headers]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps.extend(linkins)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;CPPPATH&apos;</highlight><highlight class="normal">]<sp/>=<sp/>list(set(</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split(kwargs.get(</highlight><highlight class="stringliteral">&apos;CPPPATH&apos;</highlight><highlight class="normal">,<sp/>[]))<sp/>+</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split(env.get(<sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CPPPATH&apos;</highlight><highlight class="normal">,<sp/>[]))<sp/>+</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split(kwargs.get(</highlight><highlight class="stringliteral">&apos;CXXTEST_CPPPATH&apos;</highlight><highlight class="normal">,<sp/>[]))<sp/>+</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split(env.get(<sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CXXTEST_CPPPATH&apos;</highlight><highlight class="normal">,<sp/>[]))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnitTest(env,<sp/>target,<sp/>source<sp/>=<sp/>deps,<sp/>ranks=ranks,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>env.Append(<sp/>BUILDERS<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;CxxTest&quot;</highlight><highlight class="normal"><sp/>:<sp/>CxxTest,<sp/></highlight><highlight class="stringliteral">&quot;CxxTestCpp&quot;</highlight><highlight class="normal"><sp/>:<sp/>cxxtest_builder<sp/>}<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(env):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.exists(env[</highlight><highlight class="stringliteral">&apos;CXXTEST&apos;</highlight><highlight class="normal">])</highlight></codeline>
    </programlisting>
    <location file="/Users/carlos/Devel/ASVO/asvo-tao/science_modules/site_scons/site_tools/cxxtest.py"/>
  </compounddef>
</doxygen>
