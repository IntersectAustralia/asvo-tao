===============
Workflow Module
===============

Workflow Job
------------

The expression "Workflow Job" is used to refer to a sequence of a single data processing request prepared through the system's UI components and described via XML document. Within the TAO context data processing request is a an ordered execution sequence of science modules with one or more output file. In most of the cases the first element of this execution sequence include extracting information from one of the back-end database (*simulation dataset *in *RDMS*).
   
The execution of a single data processing job (Workflow job) is expected to take a considerable computational resources (i.e. memory, processing time, and I/O overhead). Its execution time varies from seconds to days based on the job complexity. So, these jobs are initiated and monitored by the workflow module in Asynchronous manner (i.e. The UI component should not expect an immediate or near-immediate reply from the back-end modules). The monitoring of such jobs is performed using a call-back web-services.  

Workflow Command
----------------

The expression "Workflow Job" is used to refer to a Synchronous task that was requested from the UI module (usually and Admin task). These tasks are executed as soon as the workflow module pick them from a special web-service (Commands web-service). It is used mainly to execute Job processing commands (e.g Stop Job) or Job Output  command (e.g. delete job). Additionally, it is used to Pause/Resume the workflow module. 


Workflow Module Main Functionality
----------------------------------

The workflow component works as a background service on one of the back-end nodes (Node B or C). It acts as an interface between the UI components and the SwinSTAR Torque Queue. It convert the jobs description provided by the UI components (via a JSON web-service) into a Torque Queue job. 

To achieve this job, it runs an event-loop with a customizable sleep-interval between each run. The following steps explain the process of handling new Workflow Job:  

- The UI component prepares all the jobs parameters and dataset specification in a XML file and submit it with an identifier for the requested job to the workflow queue on the TAOMaster DB. 
- The workflow module should be working as a consumer for this job queue on the TAO servers (B or C).
- The workflow module should check this queue with a constant time step to update the status of the current tasks and check for new tasks. 
- A job description file is generated by the workflow module from a template. The new task is submitted to the corresponding torque queue (TAO or gSTAR) via qsub.
- The job will be executed when sufficient resources are available. 
- The workflow will keep updating the job status (e.g Pending for resources, and running) until the job is finished. 
- The workflow will notify the UI component to send email when the job is finished. 
- If there is a waiting dependence for the current job the workflow will initiate it with the appropriate parameters.  
