import sconsproject as project
from sconsproject import config

config.select(
    config.packages.clock(),
    config.packages.boost(),
    config.packages.MPI(),
    config.packages.HDF5(),
    config.packages.GSL(),
    config.packages.PostgreSQL(),
    config.packages.sqlite3(required=False),
    config.packages.SOCI(backends=['postgres']),
    config.packages.pugixml(),
    config.packages.Eigen(required=False),
    config.packages.cfitsio(),
    config.packages.glut(required=False),
    config.packages.libhpc(),
)

vars = project.create_variables()
vars.AddVariables(
    BoolVariable('MEMDEBUG', 'Enable memory debugging.', True),
    BoolVariable('MEMOPS', 'Log memory operations.', False),
    BoolVariable('MEMSTATS', 'Enable memory statistics.', False),
    BoolVariable('STACKTRACE', 'Enable stack trace.', False),
)

env = project.create_environment(vars)
env.MergeFlags('-std=c++0x')
if not env['MEMDEBUG']:
    env.MergeFlags('-DNMEMDEBUG')
if not env['MEMOPS']:
    env.MergeFlags('-DNMEMOPS')
if not env['MEMSTATS']:
    env.MergeFlags('-DNMEMSTATS')
if not env['STACKTRACE']:
    env.MergeFlags('-DNSTACKTRACE')

env.MergeFlags('-DMULTIDB')
#env.MergeFlags('-DNLOGDEBUG -DNLOGTRIVIAL')
#env.MergeFlags('-DPREPROCESSING')

project.build(
    ['base', 'modules'],
    proj_name='tao',
    env=env,
    vars=vars
)

# Install data.
env.Install('#' + env['BUILD'], env.Glob('data'))
if env['PREFIX']:
    env.Install(env['PREFIX'], env.Glob('data'))
